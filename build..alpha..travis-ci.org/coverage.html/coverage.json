{"/home/travis/build/npmtest/node-npmtest-asyncawait/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_asyncawait */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/lib.npmtest_asyncawait.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/lib.npmtest_asyncawait.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_asyncawait */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_asyncawait = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_asyncawait = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":68},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-asyncawait && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_asyncawait */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_asyncawait","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_asyncawait.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_asyncawait.rollup.js'] =","            local.assetsDict['/assets.npmtest_asyncawait.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_asyncawait.__dirname + '/lib.npmtest_asyncawait.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/index.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":22}}},"branchMap":{},"code":["﻿var async = require('./src/async');","var await = require('./src/await');","","exports.async = async;","exports.await = await;",""],"l":{"1":1,"2":1,"4":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":72}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":76}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":78}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":80}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}}},"branchMap":{},"code":["var Config = require('./config');","var makeAsyncFunc = require('./makeAsyncFunc');","/**","  * Creates a suspendable function. Suspendable functions may use the await() function","  * internally to suspend execution at arbitrary points, pending the results of","  * internal asynchronous operations.","  * @param {Function} fn - Contains the body of the suspendable function. Calls to await()","  *                        may appear inside this function.","  * @returns {Function} A function of the form `(...args) --> Promise`. Any arguments","  *                     passed to this function are passed through to fn. The returned","  *                     promise is resolved when fn returns, or rejected if fn throws.","  */","var async = makeAsyncFunc(new Config());","async.cps = async.mod('returns: none, callback: true, iterable: false');","async.thunk = async.mod('returns: thunk, callback: false, iterable: false');","async.result = async.mod('returns: result, callback: false, iterable: false');","async.iterable = async.mod('returns: promise, callback: false, iterable: true');","module.exports = async;","//# sourceMappingURL=index.js.map"],"l":{"1":1,"2":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/config.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/config.js","s":{"1":1,"2":1,"3":1,"4":5,"5":5,"6":5,"7":5,"8":5,"9":4,"10":4,"11":4,"12":4,"13":1,"14":5,"15":5,"16":5,"17":5,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"b":{"1":[4,1],"2":[5,1]},"f":{"1":1,"2":5,"3":5},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":14},"end":{"line":3,"column":26}}},"2":{"name":"Config","line":5,"loc":{"start":{"line":5,"column":4},"end":{"line":5,"column":29}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":32},"end":{"line":22,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":3,"column":0},"end":{"line":34,"column":5}},"3":{"start":{"line":5,"column":4},"end":{"line":20,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":42}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":37}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":32}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":35}},"8":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":15,"column":51}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":59}},"11":{"start":{"line":17,"column":12},"end":{"line":17,"column":49}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":57}},"13":{"start":{"line":22,"column":4},"end":{"line":27,"column":6}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":118}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":78}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":83}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":81}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":31}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":27}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":29}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":25}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":18}},"23":{"start":{"line":35,"column":0},"end":{"line":35,"column":24}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":8}},{"start":{"line":14,"column":8},"end":{"line":14,"column":8}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":26},"end":{"line":25,"column":58}},{"start":{"line":25,"column":62},"end":{"line":25,"column":82}}]}},"code":["var assert = require('assert');","/** A config object holds the configuration options for a variant of the async function. */","var Config = (function () {","    /** Construct a new Config instance. */","    function Config(options) {","        /** Recognised values: 'none', 'promise', 'thunk', 'result'. */","        this.returnValue = Config.PROMISE;","        /** Indicates whether a callback function, if supplied, will be used to notify waiters of results. */","        this.acceptsCallback = false;","        /** Indicates whether the suspendable function has iterator semantics or normal semantics. */","        this.isIterable = false;","        /** Indicates whether top-level concurrency should be limited to a specified ceiling. */","        this.maxConcurrency = null;","        if (options) {","            this.returnValue = options.returnValue;","            this.acceptsCallback = options.acceptsCallback;","            this.isIterable = options.isIterable;","            this.maxConcurrency = options.maxConcurrency;","        }","    }","    /** Checks all configuration values and throw an error if anything is invalid. */","    Config.prototype.validate = function () {","        var knownRetVal = [Config.PROMISE, Config.THUNK, Config.RESULT, Config.NONE].indexOf(this.returnValue) !== -1;","        assert(knownRetVal, 'Unrecognised return value: ' + this.returnValue);","        var hasNotifier = this.returnValue !== Config.NONE || this.acceptsCallback;","        assert(hasNotifier, 'At least one notification method must be enabled.');","    };","    // Constants for use with returnValue and callbackArg","    Config.PROMISE = 'promise';","    Config.THUNK = 'thunk';","    Config.RESULT = 'result';","    Config.NONE = 'none';","    return Config;","})();","module.exports = Config;","//# sourceMappingURL=config.js.map"],"l":{"1":1,"3":1,"5":1,"7":5,"9":5,"11":5,"13":5,"14":5,"15":4,"16":4,"17":4,"18":4,"22":1,"23":5,"24":5,"25":5,"26":5,"29":1,"30":1,"31":1,"32":1,"33":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/makeAsyncFunc.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/makeAsyncFunc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":5,"12":5,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":4,"20":4,"21":5,"22":5,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":4,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":4,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":2,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":2,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":1,"131":5,"132":4,"133":4,"134":4,"135":0,"136":0,"137":0,"138":0,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":4,"192":4,"193":4,"194":1},"b":{"1":[0,4],"2":[0,4],"3":[4,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0,2,0,2,0,0,0,0,0,0],"15":[4,0],"16":[0,1,1,0,0,0,1,1,0,0,0,0,0,0]},"f":{"1":5,"2":4,"3":0,"4":0,"5":0,"6":0,"7":4,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":4,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":5,"27":4},"fnMap":{"1":{"name":"makeAsyncFunc","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}}},"2":{"name":"async","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":42}}},"3":{"name":"makeAsyncIterator","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":56}}},"4":{"name":"iterable","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":31}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":37}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":29},"end":{"line":60,"column":41}}},"7":{"name":"makeAsyncNonIterator","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":59}}},"8":{"name":"nonIterable","line":75,"loc":{"start":{"line":75,"column":11},"end":{"line":75,"column":34}}},"9":{"name":"(anonymous_9)","line":84,"loc":{"start":{"line":84,"column":69},"end":{"line":84,"column":81}}},"10":{"name":"(anonymous_10)","line":95,"loc":{"start":{"line":95,"column":24},"end":{"line":95,"column":40}}},"11":{"name":"(anonymous_11)","line":97,"loc":{"start":{"line":97,"column":42},"end":{"line":97,"column":57}}},"12":{"name":"(anonymous_12)","line":97,"loc":{"start":{"line":97,"column":86},"end":{"line":97,"column":101}}},"13":{"name":"(anonymous_13)","line":98,"loc":{"start":{"line":98,"column":32},"end":{"line":98,"column":44}}},"14":{"name":"(anonymous_14)","line":102,"loc":{"start":{"line":102,"column":28},"end":{"line":102,"column":40}}},"15":{"name":"makeFuncWithArity","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":38}}},"16":{"name":"f0","line":117,"loc":{"start":{"line":117,"column":23},"end":{"line":117,"column":37}}},"17":{"name":"f1","line":119,"loc":{"start":{"line":119,"column":23},"end":{"line":119,"column":38}}},"18":{"name":"f2","line":121,"loc":{"start":{"line":121,"column":23},"end":{"line":121,"column":41}}},"19":{"name":"f3","line":123,"loc":{"start":{"line":123,"column":23},"end":{"line":123,"column":44}}},"20":{"name":"f4","line":125,"loc":{"start":{"line":125,"column":23},"end":{"line":125,"column":47}}},"21":{"name":"f5","line":127,"loc":{"start":{"line":127,"column":23},"end":{"line":127,"column":50}}},"22":{"name":"f6","line":129,"loc":{"start":{"line":129,"column":23},"end":{"line":129,"column":53}}},"23":{"name":"f7","line":131,"loc":{"start":{"line":131,"column":23},"end":{"line":131,"column":56}}},"24":{"name":"f8","line":133,"loc":{"start":{"line":133,"column":23},"end":{"line":133,"column":59}}},"25":{"name":"f9","line":135,"loc":{"start":{"line":135,"column":23},"end":{"line":135,"column":63}}},"26":{"name":"makeModFunc","line":140,"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":29}}},"27":{"name":"(anonymous_27)","line":141,"loc":{"start":{"line":141,"column":11},"end":{"line":141,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":26}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":41}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":47}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}},"10":{"start":{"line":11,"column":0},"end":{"line":31,"column":1}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":22}},"12":{"start":{"line":15,"column":4},"end":{"line":27,"column":6}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":107}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":84}},"15":{"start":{"line":20,"column":8},"end":{"line":20,"column":59}},"16":{"start":{"line":22,"column":8},"end":{"line":22,"column":36}},"17":{"start":{"line":23,"column":8},"end":{"line":24,"column":20}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":20}},"19":{"start":{"line":25,"column":8},"end":{"line":25,"column":50}},"20":{"start":{"line":26,"column":8},"end":{"line":26,"column":22}},"21":{"start":{"line":29,"column":4},"end":{"line":29,"column":37}},"22":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"23":{"start":{"line":33,"column":0},"end":{"line":71,"column":1}},"24":{"start":{"line":35,"column":4},"end":{"line":70,"column":6}},"25":{"start":{"line":37,"column":8},"end":{"line":37,"column":58}},"26":{"start":{"line":38,"column":8},"end":{"line":39,"column":46}},"27":{"start":{"line":39,"column":12},"end":{"line":39,"column":46}},"28":{"start":{"line":41,"column":8},"end":{"line":53,"column":10}},"29":{"start":{"line":43,"column":12},"end":{"line":46,"column":13}},"30":{"start":{"line":44,"column":16},"end":{"line":45,"column":89}},"31":{"start":{"line":48,"column":12},"end":{"line":49,"column":72}},"32":{"start":{"line":49,"column":16},"end":{"line":49,"column":72}},"33":{"start":{"line":50,"column":12},"end":{"line":51,"column":74}},"34":{"start":{"line":51,"column":16},"end":{"line":51,"column":74}},"35":{"start":{"line":52,"column":12},"end":{"line":52,"column":26}},"36":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"37":{"start":{"line":57,"column":8},"end":{"line":57,"column":69}},"38":{"start":{"line":58,"column":8},"end":{"line":58,"column":108}},"39":{"start":{"line":60,"column":8},"end":{"line":67,"column":10}},"40":{"start":{"line":61,"column":12},"end":{"line":61,"column":62}},"41":{"start":{"line":62,"column":12},"end":{"line":63,"column":39}},"42":{"start":{"line":63,"column":16},"end":{"line":63,"column":39}},"43":{"start":{"line":64,"column":12},"end":{"line":64,"column":39}},"44":{"start":{"line":65,"column":12},"end":{"line":65,"column":31}},"45":{"start":{"line":66,"column":12},"end":{"line":66,"column":34}},"46":{"start":{"line":69,"column":8},"end":{"line":69,"column":24}},"47":{"start":{"line":73,"column":0},"end":{"line":112,"column":1}},"48":{"start":{"line":75,"column":4},"end":{"line":111,"column":6}},"49":{"start":{"line":77,"column":8},"end":{"line":77,"column":54}},"50":{"start":{"line":78,"column":8},"end":{"line":79,"column":42}},"51":{"start":{"line":79,"column":12},"end":{"line":79,"column":42}},"52":{"start":{"line":81,"column":8},"end":{"line":82,"column":50}},"53":{"start":{"line":82,"column":12},"end":{"line":82,"column":50}},"54":{"start":{"line":84,"column":8},"end":{"line":84,"column":112}},"55":{"start":{"line":84,"column":83},"end":{"line":84,"column":108}},"56":{"start":{"line":85,"column":8},"end":{"line":88,"column":9}},"57":{"start":{"line":86,"column":12},"end":{"line":86,"column":35}},"58":{"start":{"line":87,"column":12},"end":{"line":87,"column":43}},"59":{"start":{"line":89,"column":8},"end":{"line":92,"column":9}},"60":{"start":{"line":90,"column":12},"end":{"line":90,"column":45}},"61":{"start":{"line":91,"column":12},"end":{"line":91,"column":43}},"62":{"start":{"line":94,"column":8},"end":{"line":103,"column":9}},"63":{"start":{"line":95,"column":12},"end":{"line":99,"column":14}},"64":{"start":{"line":96,"column":16},"end":{"line":97,"column":124}},"65":{"start":{"line":97,"column":20},"end":{"line":97,"column":124}},"66":{"start":{"line":97,"column":59},"end":{"line":97,"column":82}},"67":{"start":{"line":97,"column":103},"end":{"line":97,"column":120}},"68":{"start":{"line":98,"column":16},"end":{"line":98,"column":91}},"69":{"start":{"line":98,"column":46},"end":{"line":98,"column":87}},"70":{"start":{"line":102,"column":12},"end":{"line":102,"column":87}},"71":{"start":{"line":102,"column":42},"end":{"line":102,"column":83}},"72":{"start":{"line":105,"column":8},"end":{"line":110,"column":9}},"73":{"start":{"line":106,"column":33},"end":{"line":106,"column":57}},"74":{"start":{"line":107,"column":31},"end":{"line":107,"column":44}},"75":{"start":{"line":108,"column":32},"end":{"line":108,"column":63}},"76":{"start":{"line":109,"column":30},"end":{"line":109,"column":37}},"77":{"start":{"line":114,"column":0},"end":{"line":139,"column":1}},"78":{"start":{"line":116,"column":4},"end":{"line":138,"column":5}},"79":{"start":{"line":117,"column":16},"end":{"line":118,"column":61}},"80":{"start":{"line":117,"column":39},"end":{"line":117,"column":85}},"81":{"start":{"line":117,"column":86},"end":{"line":118,"column":32}},"82":{"start":{"line":118,"column":12},"end":{"line":118,"column":32}},"83":{"start":{"line":118,"column":33},"end":{"line":118,"column":58}},"84":{"start":{"line":119,"column":16},"end":{"line":120,"column":61}},"85":{"start":{"line":119,"column":40},"end":{"line":119,"column":86}},"86":{"start":{"line":119,"column":87},"end":{"line":120,"column":32}},"87":{"start":{"line":120,"column":12},"end":{"line":120,"column":32}},"88":{"start":{"line":120,"column":33},"end":{"line":120,"column":58}},"89":{"start":{"line":121,"column":16},"end":{"line":122,"column":61}},"90":{"start":{"line":121,"column":43},"end":{"line":121,"column":89}},"91":{"start":{"line":121,"column":90},"end":{"line":122,"column":32}},"92":{"start":{"line":122,"column":12},"end":{"line":122,"column":32}},"93":{"start":{"line":122,"column":33},"end":{"line":122,"column":58}},"94":{"start":{"line":123,"column":16},"end":{"line":124,"column":61}},"95":{"start":{"line":123,"column":46},"end":{"line":123,"column":92}},"96":{"start":{"line":123,"column":93},"end":{"line":124,"column":32}},"97":{"start":{"line":124,"column":12},"end":{"line":124,"column":32}},"98":{"start":{"line":124,"column":33},"end":{"line":124,"column":58}},"99":{"start":{"line":125,"column":16},"end":{"line":126,"column":61}},"100":{"start":{"line":125,"column":49},"end":{"line":125,"column":95}},"101":{"start":{"line":125,"column":96},"end":{"line":126,"column":32}},"102":{"start":{"line":126,"column":12},"end":{"line":126,"column":32}},"103":{"start":{"line":126,"column":33},"end":{"line":126,"column":58}},"104":{"start":{"line":127,"column":16},"end":{"line":128,"column":61}},"105":{"start":{"line":127,"column":52},"end":{"line":127,"column":98}},"106":{"start":{"line":127,"column":99},"end":{"line":128,"column":32}},"107":{"start":{"line":128,"column":12},"end":{"line":128,"column":32}},"108":{"start":{"line":128,"column":33},"end":{"line":128,"column":58}},"109":{"start":{"line":129,"column":16},"end":{"line":130,"column":61}},"110":{"start":{"line":129,"column":55},"end":{"line":129,"column":101}},"111":{"start":{"line":129,"column":102},"end":{"line":130,"column":32}},"112":{"start":{"line":130,"column":12},"end":{"line":130,"column":32}},"113":{"start":{"line":130,"column":33},"end":{"line":130,"column":58}},"114":{"start":{"line":131,"column":16},"end":{"line":132,"column":61}},"115":{"start":{"line":131,"column":58},"end":{"line":131,"column":104}},"116":{"start":{"line":131,"column":105},"end":{"line":132,"column":32}},"117":{"start":{"line":132,"column":12},"end":{"line":132,"column":32}},"118":{"start":{"line":132,"column":33},"end":{"line":132,"column":58}},"119":{"start":{"line":133,"column":16},"end":{"line":134,"column":61}},"120":{"start":{"line":133,"column":61},"end":{"line":133,"column":107}},"121":{"start":{"line":133,"column":108},"end":{"line":134,"column":32}},"122":{"start":{"line":134,"column":12},"end":{"line":134,"column":32}},"123":{"start":{"line":134,"column":33},"end":{"line":134,"column":58}},"124":{"start":{"line":135,"column":16},"end":{"line":136,"column":61}},"125":{"start":{"line":135,"column":65},"end":{"line":135,"column":111}},"126":{"start":{"line":135,"column":112},"end":{"line":136,"column":32}},"127":{"start":{"line":136,"column":12},"end":{"line":136,"column":32}},"128":{"start":{"line":136,"column":33},"end":{"line":136,"column":58}},"129":{"start":{"line":137,"column":17},"end":{"line":137,"column":27}},"130":{"start":{"line":140,"column":0},"end":{"line":223,"column":1}},"131":{"start":{"line":141,"column":4},"end":{"line":222,"column":6}},"132":{"start":{"line":142,"column":8},"end":{"line":219,"column":9}},"133":{"start":{"line":145,"column":12},"end":{"line":145,"column":27}},"134":{"start":{"line":146,"column":12},"end":{"line":217,"column":13}},"135":{"start":{"line":148,"column":20},"end":{"line":148,"column":35}},"136":{"start":{"line":149,"column":20},"end":{"line":149,"column":31}},"137":{"start":{"line":150,"column":20},"end":{"line":150,"column":31}},"138":{"start":{"line":151,"column":20},"end":{"line":151,"column":26}},"139":{"start":{"line":153,"column":20},"end":{"line":153,"column":33}},"140":{"start":{"line":154,"column":20},"end":{"line":154,"column":31}},"141":{"start":{"line":155,"column":20},"end":{"line":155,"column":31}},"142":{"start":{"line":156,"column":20},"end":{"line":156,"column":26}},"143":{"start":{"line":158,"column":20},"end":{"line":158,"column":34}},"144":{"start":{"line":159,"column":20},"end":{"line":159,"column":31}},"145":{"start":{"line":160,"column":20},"end":{"line":160,"column":31}},"146":{"start":{"line":161,"column":20},"end":{"line":161,"column":26}},"147":{"start":{"line":163,"column":20},"end":{"line":163,"column":35}},"148":{"start":{"line":164,"column":20},"end":{"line":164,"column":30}},"149":{"start":{"line":165,"column":20},"end":{"line":165,"column":31}},"150":{"start":{"line":166,"column":20},"end":{"line":166,"column":26}},"151":{"start":{"line":168,"column":20},"end":{"line":168,"column":33}},"152":{"start":{"line":169,"column":20},"end":{"line":169,"column":30}},"153":{"start":{"line":170,"column":20},"end":{"line":170,"column":31}},"154":{"start":{"line":171,"column":20},"end":{"line":171,"column":26}},"155":{"start":{"line":173,"column":20},"end":{"line":173,"column":34}},"156":{"start":{"line":174,"column":20},"end":{"line":174,"column":30}},"157":{"start":{"line":175,"column":20},"end":{"line":175,"column":31}},"158":{"start":{"line":176,"column":20},"end":{"line":176,"column":26}},"159":{"start":{"line":178,"column":20},"end":{"line":178,"column":32}},"160":{"start":{"line":179,"column":20},"end":{"line":179,"column":30}},"161":{"start":{"line":180,"column":20},"end":{"line":180,"column":31}},"162":{"start":{"line":181,"column":20},"end":{"line":181,"column":26}},"163":{"start":{"line":183,"column":20},"end":{"line":183,"column":35}},"164":{"start":{"line":184,"column":20},"end":{"line":184,"column":31}},"165":{"start":{"line":185,"column":20},"end":{"line":185,"column":30}},"166":{"start":{"line":186,"column":20},"end":{"line":186,"column":26}},"167":{"start":{"line":188,"column":20},"end":{"line":188,"column":33}},"168":{"start":{"line":189,"column":20},"end":{"line":189,"column":31}},"169":{"start":{"line":190,"column":20},"end":{"line":190,"column":30}},"170":{"start":{"line":191,"column":20},"end":{"line":191,"column":26}},"171":{"start":{"line":193,"column":20},"end":{"line":193,"column":34}},"172":{"start":{"line":194,"column":20},"end":{"line":194,"column":31}},"173":{"start":{"line":195,"column":20},"end":{"line":195,"column":30}},"174":{"start":{"line":196,"column":20},"end":{"line":196,"column":26}},"175":{"start":{"line":198,"column":20},"end":{"line":198,"column":35}},"176":{"start":{"line":199,"column":20},"end":{"line":199,"column":30}},"177":{"start":{"line":200,"column":20},"end":{"line":200,"column":30}},"178":{"start":{"line":201,"column":20},"end":{"line":201,"column":26}},"179":{"start":{"line":203,"column":20},"end":{"line":203,"column":33}},"180":{"start":{"line":204,"column":20},"end":{"line":204,"column":30}},"181":{"start":{"line":205,"column":20},"end":{"line":205,"column":30}},"182":{"start":{"line":206,"column":20},"end":{"line":206,"column":26}},"183":{"start":{"line":208,"column":20},"end":{"line":208,"column":34}},"184":{"start":{"line":209,"column":20},"end":{"line":209,"column":30}},"185":{"start":{"line":210,"column":20},"end":{"line":210,"column":30}},"186":{"start":{"line":211,"column":20},"end":{"line":211,"column":26}},"187":{"start":{"line":213,"column":20},"end":{"line":213,"column":32}},"188":{"start":{"line":214,"column":20},"end":{"line":214,"column":30}},"189":{"start":{"line":215,"column":20},"end":{"line":215,"column":30}},"190":{"start":{"line":216,"column":20},"end":{"line":216,"column":26}},"191":{"start":{"line":218,"column":12},"end":{"line":218,"column":111}},"192":{"start":{"line":220,"column":8},"end":{"line":220,"column":68}},"193":{"start":{"line":221,"column":8},"end":{"line":221,"column":40}},"194":{"start":{"line":224,"column":0},"end":{"line":224,"column":31}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":48},"end":{"line":17,"column":84}},{"start":{"line":17,"column":87},"end":{"line":17,"column":106}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":43},"end":{"line":19,"column":60}},{"start":{"line":19,"column":63},"end":{"line":19,"column":83}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":12}},{"start":{"line":43,"column":12},"end":{"line":43,"column":12}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":48,"column":12}},{"start":{"line":48,"column":12},"end":{"line":48,"column":12}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"8":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":8}},{"start":{"line":89,"column":8},"end":{"line":89,"column":8}}]},"10":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":34}},{"start":{"line":89,"column":38},"end":{"line":89,"column":56}},{"start":{"line":89,"column":60},"end":{"line":89,"column":109}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":16},"end":{"line":96,"column":16}},{"start":{"line":96,"column":16},"end":{"line":96,"column":16}}]},"13":{"line":105,"type":"switch","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":57}},{"start":{"line":107,"column":12},"end":{"line":107,"column":44}},{"start":{"line":108,"column":12},"end":{"line":108,"column":63}},{"start":{"line":109,"column":12},"end":{"line":109,"column":37}}]},"14":{"line":116,"type":"switch","locations":[{"start":{"line":117,"column":8},"end":{"line":118,"column":61}},{"start":{"line":119,"column":8},"end":{"line":120,"column":61}},{"start":{"line":121,"column":8},"end":{"line":122,"column":61}},{"start":{"line":123,"column":8},"end":{"line":124,"column":61}},{"start":{"line":125,"column":8},"end":{"line":126,"column":61}},{"start":{"line":127,"column":8},"end":{"line":128,"column":61}},{"start":{"line":129,"column":8},"end":{"line":130,"column":61}},{"start":{"line":131,"column":8},"end":{"line":132,"column":61}},{"start":{"line":133,"column":8},"end":{"line":134,"column":61}},{"start":{"line":135,"column":8},"end":{"line":136,"column":61}},{"start":{"line":137,"column":8},"end":{"line":137,"column":27}}]},"15":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"16":{"line":146,"type":"switch","locations":[{"start":{"line":147,"column":16},"end":{"line":151,"column":26}},{"start":{"line":152,"column":16},"end":{"line":156,"column":26}},{"start":{"line":157,"column":16},"end":{"line":161,"column":26}},{"start":{"line":162,"column":16},"end":{"line":166,"column":26}},{"start":{"line":167,"column":16},"end":{"line":171,"column":26}},{"start":{"line":172,"column":16},"end":{"line":176,"column":26}},{"start":{"line":177,"column":16},"end":{"line":181,"column":26}},{"start":{"line":182,"column":16},"end":{"line":186,"column":26}},{"start":{"line":187,"column":16},"end":{"line":191,"column":26}},{"start":{"line":192,"column":16},"end":{"line":196,"column":26}},{"start":{"line":197,"column":16},"end":{"line":201,"column":26}},{"start":{"line":202,"column":16},"end":{"line":206,"column":26}},{"start":{"line":207,"column":16},"end":{"line":211,"column":26}},{"start":{"line":212,"column":16},"end":{"line":216,"column":26}}]}},"code":["var Fiber = require('../fibers');","var _ = require('lodash');","var Config = require('./config');","var FiberMgr = require('./fiberManager');","var RunContext = require('./runContext');","var Semaphore = require('./semaphore');","var AsyncIterator = require('./asyncIterator');","var defer = require('./defer');","var await = require('../await/index');","/** Function for creating a specific variant of the async function. */","function makeAsyncFunc(config) {","    // Validate the specified configuration","    config.validate();","    // Create an async function tailored to the given options.","    var result = function async(bodyFunc) {","        // Create a semaphore for limiting top-level concurrency, if specified in options.","        var semaphore = config.maxConcurrency ? new Semaphore(config.maxConcurrency) : Semaphore.unlimited;","        // Choose and run the appropriate function factory based on whether the result should be iterable.","        var makeFunc = config.isIterable ? makeAsyncIterator : makeAsyncNonIterator;","        var result = makeFunc(bodyFunc, config, semaphore);","        // Ensure the suspendable function's arity matches that of the function it wraps.","        var arity = bodyFunc.length;","        if (config.acceptsCallback)","            ++arity;","        result = makeFuncWithArity(result, arity);","        return result;","    };","    // Add the mod() function, and return the result.","    result.mod = makeModFunc(config);","    return result;","}","/** Function for creating iterable suspendable functions. */","function makeAsyncIterator(bodyFunc, config, semaphore) {","    // Return a function that returns an iterator.","    return function iterable() {","        // Capture the initial arguments used to start the iterator, as an array.","        var startupArgs = new Array(arguments.length + 1); // Reserve 0th arg for the yield function. ","        for (var i = 0, len = arguments.length; i < len; ++i)","            startupArgs[i + 1] = arguments[i];","        // Create a yield() function tailored for this iterator.","        var yield_ = function (expr) {","            // Ensure this function is executing inside a fiber.","            if (!Fiber.current) {","                throw new Error('await functions, yield functions, and value-returning suspendable ' +","                    'functions may only be called from inside a suspendable function. ');","            }","            // Notify waiters of the next result, then suspend the iterator.","            if (runContext.callback)","                runContext.callback(null, { value: expr, done: false });","            if (runContext.resolver)","                runContext.resolver.resolve({ value: expr, done: false });","            Fiber.yield();","        };","        // Insert the yield function as the first argument when starting the iterator.","        startupArgs[0] = yield_;","        // Create the iterator.","        var runContext = new RunContext(bodyFunc, this, startupArgs);","        var iterator = new AsyncIterator(runContext, semaphore, config.returnValue, config.acceptsCallback);","        // Wrap the given bodyFunc to properly complete the iteration.","        runContext.wrapped = function () {","            var len = arguments.length, args = new Array(len);","            for (var i = 0; i < len; ++i)","                args[i] = arguments[i];","            bodyFunc.apply(this, args);","            iterator.destroy();","            return { done: true };","        };","        // Return the iterator.","        return iterator;","    };","}","/** Function for creating non-iterable suspendable functions. */","function makeAsyncNonIterator(bodyFunc, config, semaphore) {","    // Return a function that executes fn in a fiber and returns a promise of fn's result.","    return function nonIterable() {","        // Get all the arguments passed in, as an array.","        var argsAsArray = new Array(arguments.length);","        for (var i = 0; i < argsAsArray.length; ++i)","            argsAsArray[i] = arguments[i];","        // Remove concurrency restrictions for nested calls, to avoid race conditions.","        if (FiberMgr.isExecutingInFiber())","            this._semaphore = Semaphore.unlimited;","        // Configure the run context.","        var runContext = new RunContext(bodyFunc, this, argsAsArray, function () { return semaphore.leave(); });","        if (config.returnValue !== Config.NONE) {","            var resolver = defer();","            runContext.resolver = resolver;","        }","        if (config.acceptsCallback && argsAsArray.length && _.isFunction(argsAsArray[argsAsArray.length - 1])) {","            var callback = argsAsArray.pop();","            runContext.callback = callback;","        }","        // Execute bodyFunc to completion in a coroutine. For thunks, this is a lazy operation.","        if (config.returnValue === Config.THUNK) {","            var thunk = function (done) {","                if (done)","                    resolver.promise.then(function (val) { return done(null, val); }, function (err) { return done(err); });","                semaphore.enter(function () { return FiberMgr.create().run(runContext); });","            };","        }","        else {","            semaphore.enter(function () { return FiberMgr.create().run(runContext); });","        }","        // Return the appropriate value.","        switch (config.returnValue) {","            case Config.PROMISE: return resolver.promise;","            case Config.THUNK: return thunk;","            case Config.RESULT: return await(resolver.promise);","            case Config.NONE: return;","        }","    };","}","/** Returns a function that directly proxies the given function, whilst reporting the given arity. */","function makeFuncWithArity(fn, arity) {","    // Need to handle each arity individually, but the body never changes.","    switch (arity) {","        case 0: return function f0() { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 1: return function f1(a) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 2: return function f2(a, b) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 3: return function f3(a, b, c) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 4: return function f4(a, b, c, d) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 5: return function f5(a, b, c, d, e) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 6: return function f6(a, b, c, d, e, f) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 7: return function f7(a, b, c, d, e, f, g) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 8: return function f8(a, b, c, d, e, f, g, h) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        case 9: return function f9(a, b, c, d, e, f, g, h, _i) { var i, l = arguments.length, r = new Array(l); for (i = 0; i < l; ++i)","            r[i] = arguments[i]; return fn.apply(this, r); };","        default: return fn; // Bail out if arity is crazy high.","    }","}","function makeModFunc(config) {","    return function (options, maxConcurrency) {","        if (_.isString(options)) {","            // This way of specifying options is useful for TypeScript users, as they get better type information.","            // JavaScript users can use this too, but providing an options hash is more useful in that case. ","            var rt, cb, it;","            switch (options) {","                case 'returns: promise, callback: false, iterable: false':","                    rt = 'promise';","                    cb = false;","                    it = false;","                    break;","                case 'returns: thunk, callback: false, iterable: false':","                    rt = 'thunk';","                    cb = false;","                    it = false;","                    break;","                case 'returns: result, callback: false, iterable: false':","                    rt = 'result';","                    cb = false;","                    it = false;","                    break;","                case 'returns: promise, callback: true, iterable: false':","                    rt = 'promise';","                    cb = true;","                    it = false;","                    break;","                case 'returns: thunk, callback: true, iterable: false':","                    rt = 'thunk';","                    cb = true;","                    it = false;","                    break;","                case 'returns: result, callback: true, iterable: false':","                    rt = 'result';","                    cb = true;","                    it = false;","                    break;","                case 'returns: none, callback: true, iterable: false':","                    rt = 'none';","                    cb = true;","                    it = false;","                    break;","                case 'returns: promise, callback: false, iterable: true':","                    rt = 'promise';","                    cb = false;","                    it = true;","                    break;","                case 'returns: thunk, callback: false, iterable: true':","                    rt = 'thunk';","                    cb = false;","                    it = true;","                    break;","                case 'returns: result, callback: false, iterable: true':","                    rt = 'result';","                    cb = false;","                    it = true;","                    break;","                case 'returns: promise, callback: true, iterable: true':","                    rt = 'promise';","                    cb = true;","                    it = true;","                    break;","                case 'returns: thunk, callback: true, iterable: true':","                    rt = 'thunk';","                    cb = true;","                    it = true;","                    break;","                case 'returns: result, callback: true, iterable: true':","                    rt = 'result';","                    cb = true;","                    it = true;","                    break;","                case 'returns: none, callback: true, iterable: true':","                    rt = 'none';","                    cb = true;","                    it = true;","                    break;","            }","            options = { returnValue: rt, acceptsCallback: cb, isIterable: it, maxConcurrency: maxConcurrency };","        }","        var newConfig = new Config(_.defaults({}, options, config));","        return makeAsyncFunc(newConfig);","    };","}","module.exports = makeAsyncFunc;","//# sourceMappingURL=makeAsyncFunc.js.map"],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"11":1,"13":5,"15":5,"17":4,"19":4,"20":4,"22":4,"23":4,"24":4,"25":4,"26":4,"29":5,"30":5,"33":1,"35":0,"37":0,"38":0,"39":0,"41":0,"43":0,"44":0,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0,"57":0,"58":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"73":1,"75":4,"77":0,"78":0,"79":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"94":0,"95":0,"96":0,"97":0,"98":0,"102":0,"105":0,"106":0,"107":0,"108":0,"109":0,"114":1,"116":4,"117":0,"118":0,"119":0,"120":0,"121":2,"122":0,"123":0,"124":0,"125":2,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"140":1,"141":5,"142":4,"145":4,"146":4,"148":0,"149":0,"150":0,"151":0,"153":1,"154":1,"155":1,"156":1,"158":1,"159":1,"160":1,"161":1,"163":0,"164":0,"165":0,"166":0,"168":0,"169":0,"170":0,"171":0,"173":0,"174":0,"175":0,"176":0,"178":1,"179":1,"180":1,"181":1,"183":1,"184":1,"185":1,"186":1,"188":0,"189":0,"190":0,"191":0,"193":0,"194":0,"195":0,"196":0,"198":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"208":0,"209":0,"210":0,"211":0,"213":0,"214":0,"215":0,"216":0,"218":4,"220":4,"221":4,"224":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/fibers.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/fibers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{"1":[1,0],"2":[1,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":21,"column":0},"end":{"line":22,"column":27}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":27}},"4":{"start":{"line":23,"column":0},"end":{"line":24,"column":36}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":36}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":24}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":0},"end":{"line":21,"column":0}},{"start":{"line":21,"column":0},"end":{"line":21,"column":0}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":0},"end":{"line":23,"column":0}},{"start":{"line":23,"column":0},"end":{"line":23,"column":0}}]}},"code":["var Fiber = require('fibers');","// HOTFIX for node-fibers problem.","// I have not prepared a repro unit test yet. In the meanwhile,","// here is the gist of the problem:","// A problem can occur if a node.js process has a node_modules tree that","// contains multiple copies of node-fibers, whether the same version or not.","// For instance, a project depends on two top-level modules which each","// depend on node-fibers, such that 'npm install' installs two copies of","// node-fibers. Furthermore, both of these copies are required() during execution.","// In this scenario, the expected control flow of the process can be corrupted.","// In one observed case, resuming a suspended fiber actually transfers control","// to the code encapsulated in a completely different fiber.","// The problem vanishes if we ensure that only one instance of node-fibers gets","// used throughout the process. The following lines do this by caching a","// node-fibers instance globally on first require(), and reusing that instance","// for all subsequent require()s.","// NB: This is a workaround, not a complete fix! If modules other than asyncawait","// use node-fibers, then the process may still end up using multiple instances of","// node-fibers during execution. This needs investigating in node-fibers itself.","// I intend to create a cut-down repro and raise an issue in the node-fibers project.","if (!global.asyncawait)","    global.asyncawait = {};","if (!global.asyncawait.Fiber)","    global.asyncawait.Fiber = Fiber;","var result = global.asyncawait.Fiber;","module.exports = result;","//# sourceMappingURL=fibers.js.map"],"l":{"1":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/fiberManager.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/fiberManager.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":0,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":1},"end":{"line":4,"column":25}}},"2":{"name":"isExecutingInFiber","line":6,"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":34}}},"3":{"name":"create","line":11,"loc":{"start":{"line":11,"column":4},"end":{"line":11,"column":22}}},"4":{"name":"runInFiber","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":28}}},"5":{"name":"tryBlock","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":26}}},"6":{"name":"catchBlock","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":33}}},"7":{"name":"finallyBlock","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":30}}},"8":{"name":"adjustFiberCount","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":17}},"3":{"start":{"line":4,"column":0},"end":{"line":15,"column":40}},"4":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":31}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":57}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":33}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":33}},"10":{"start":{"line":24,"column":0},"end":{"line":34,"column":1}},"11":{"start":{"line":25,"column":4},"end":{"line":33,"column":5}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":25}},"13":{"start":{"line":29,"column":8},"end":{"line":29,"column":32}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":29}},"15":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"16":{"start":{"line":37,"column":4},"end":{"line":37,"column":25}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":74}},"18":{"start":{"line":41,"column":4},"end":{"line":42,"column":38}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":38}},"20":{"start":{"line":43,"column":4},"end":{"line":44,"column":40}},"21":{"start":{"line":44,"column":8},"end":{"line":44,"column":40}},"22":{"start":{"line":46,"column":0},"end":{"line":52,"column":1}},"23":{"start":{"line":48,"column":4},"end":{"line":49,"column":29}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":29}},"25":{"start":{"line":50,"column":4},"end":{"line":51,"column":36}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":36}},"27":{"start":{"line":53,"column":0},"end":{"line":59,"column":1}},"28":{"start":{"line":55,"column":4},"end":{"line":55,"column":25}},"29":{"start":{"line":57,"column":4},"end":{"line":58,"column":22}},"30":{"start":{"line":58,"column":8},"end":{"line":58,"column":22}},"31":{"start":{"line":64,"column":0},"end":{"line":70,"column":1}},"32":{"start":{"line":65,"column":4},"end":{"line":65,"column":30}},"33":{"start":{"line":66,"column":4},"end":{"line":69,"column":5}},"34":{"start":{"line":67,"column":8},"end":{"line":67,"column":29}},"35":{"start":{"line":68,"column":8},"end":{"line":68,"column":39}},"36":{"start":{"line":71,"column":0},"end":{"line":71,"column":35}},"37":{"start":{"line":72,"column":0},"end":{"line":72,"column":25}},"38":{"start":{"line":73,"column":0},"end":{"line":73,"column":30}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":3},"end":{"line":15,"column":15}},{"start":{"line":15,"column":20},"end":{"line":15,"column":37}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"3":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"7":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]}},"code":["var Fiber = require('../fibers');","/** Helpers for Fiber management. */","var FiberManager;","(function (FiberManager) {","    /** Returns true if the current execution context is within a fiber. */","    function isExecutingInFiber() {","        return !!Fiber.current;","    }","    FiberManager.isExecutingInFiber = isExecutingInFiber;","    /** Creates and returns a new fiber in which an arbitrary function may be executed. */","    function create() {","        return Fiber(runInFiber);","    }","    FiberManager.create = create;","})(FiberManager || (FiberManager = {}));","/**"," * The runInFiber() function provides the prolog/epilog wrapper code for running a function inside"," * a fiber. The runInFiber() function accepts a RunContext instance, and calls the wrapped function"," * specified there. The final return/throw value of the wrapped function is used to notify the"," * promise resolver and/or callback specified in the RunContext. This function must take all its"," * information in a single argument because it is called via Fiber#run(), which accepts one argument."," * NB: Since try/catch/finally prevents V8 optimisations, the function is split into several parts."," */","function runInFiber(runCtx) {","    try {","        tryBlock(runCtx);","    }","    catch (err) {","        catchBlock(runCtx, err);","    }","    finally {","        finallyBlock(runCtx);","    }","}","function tryBlock(runCtx) {","    // Maintain an accurate count of currently active fibers, for pool management.","    adjustFiberCount(+1);","    // Call the wrapped function. It may be suspended several times (at await and/or yield calls).","    var result = runCtx.wrapped.apply(runCtx.thisArg, runCtx.argsAsArray);","    // The wrapped function returned normally. Notify any waiters.","    if (runCtx.callback)","        runCtx.callback(null, result);","    if (runCtx.resolver)","        runCtx.resolver.resolve(result);","}","function catchBlock(runCtx, err) {","    // The wrapped function threw an exception. Notify any waiters.","    if (runCtx.callback)","        runCtx.callback(err);","    if (runCtx.resolver)","        runCtx.resolver.reject(err);","}","function finallyBlock(runCtx) {","    // Maintain an accurate count of currently active fibers, for pool management.","    adjustFiberCount(-1);","    // Execute the done() callback, if provided.","    if (runCtx.done)","        runCtx.done();","}","/**"," * The following functionality prevents memory leaks in node-fibers by actively managing Fiber.poolSize."," * For more information, see https://github.com/laverdet/node-fibers/issues/169."," */","function adjustFiberCount(delta) {","    activeFiberCount += delta;","    if (activeFiberCount >= fiberPoolSize) {","        fiberPoolSize += 100;","        Fiber.poolSize = fiberPoolSize;","    }","}","var fiberPoolSize = Fiber.poolSize;","var activeFiberCount = 0;","module.exports = FiberManager;","//# sourceMappingURL=fiberManager.js.map"],"l":{"1":1,"3":1,"4":1,"6":1,"7":0,"9":1,"11":1,"12":0,"14":1,"24":1,"25":0,"26":0,"29":0,"32":0,"35":1,"37":0,"39":0,"41":0,"42":0,"43":0,"44":0,"46":1,"48":0,"49":0,"50":0,"51":0,"53":1,"55":0,"57":0,"58":0,"64":1,"65":0,"66":0,"67":0,"68":0,"71":1,"72":1,"73":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/runContext.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/runContext.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1},"b":{},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":30}}},"2":{"name":"RunContext","line":8,"loc":{"start":{"line":8,"column":4},"end":{"line":8,"column":61}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":19,"column":5}},"2":{"start":{"line":8,"column":4},"end":{"line":17,"column":5}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"5":{"start":{"line":13,"column":8},"end":{"line":13,"column":31}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":39}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":22}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}},"branchMap":{},"code":["/**"," * This class is used to pass all required contextual information to the runInFiber()"," * function as a single argument. runInFiber() can only accept a single argument because"," * it is invoked via Fiber#run(), which can only pass through a single argument."," */","var RunContext = (function () {","    /** Construct a new RunContext instance. */","    function RunContext(wrapped, thisArg, argsAsArray, done) {","        /** Optional promise resolver for notifying the wrapped function's return/throw value. */","        this.resolver = null;","        /** Optional callback for notifying the wrapped function's return/throw value. */","        this.callback = null;","        this.wrapped = wrapped;","        this.thisArg = thisArg;","        this.argsAsArray = argsAsArray;","        this.done = done;","    }","    return RunContext;","})();","module.exports = RunContext;","//# sourceMappingURL=runContext.js.map"],"l":{"6":1,"8":1,"10":0,"12":0,"13":0,"14":0,"15":0,"16":0,"18":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/semaphore.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/semaphore.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":29}}},"2":{"name":"Semaphore","line":3,"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":26}}},"3":{"name":"(anonymous_3)","line":8,"loc":{"start":{"line":8,"column":32},"end":{"line":8,"column":46}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":32},"end":{"line":17,"column":44}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":28,"column":5}},"2":{"start":{"line":3,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":4,"column":8},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":8},"end":{"line":5,"column":26}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":24}},"6":{"start":{"line":8,"column":4},"end":{"line":16,"column":6}},"7":{"start":{"line":9,"column":8},"end":{"line":15,"column":9}},"8":{"start":{"line":10,"column":12},"end":{"line":10,"column":26}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":17}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":34}},"11":{"start":{"line":17,"column":4},"end":{"line":25,"column":6}},"12":{"start":{"line":18,"column":8},"end":{"line":24,"column":9}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":40}},"14":{"start":{"line":20,"column":12},"end":{"line":20,"column":17}},"15":{"start":{"line":23,"column":12},"end":{"line":23,"column":26}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":50}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"18":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]}},"code":["/** A simple abstraction for limiting concurrent function calls to a specific upper bound. */","var Semaphore = (function () {","    function Semaphore(n) {","        this.n = n;","        this._queued = [];","        this._avail = n;","    }","    Semaphore.prototype.enter = function (fn) {","        if (this._avail > 0) {","            --this._avail;","            fn();","        }","        else {","            this._queued.push(fn);","        }","    };","    Semaphore.prototype.leave = function () {","        if (this._queued.length > 0) {","            var fn = this._queued.pop();","            fn();","        }","        else {","            ++this._avail;","        }","    };","    Semaphore.unlimited = new Semaphore(10000000);","    return Semaphore;","})();","module.exports = Semaphore;","//# sourceMappingURL=semaphore.js.map"],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"14":0,"17":1,"18":0,"19":0,"20":0,"23":0,"26":1,"27":1,"29":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/asyncIterator.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/asyncIterator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1,"102":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":33}}},"2":{"name":"AsyncIterator","line":13,"loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":80}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":35},"end":{"line":21,"column":55}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":24},"end":{"line":36,"column":40}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":42},"end":{"line":38,"column":57}}},"6":{"name":"(anonymous_6)","line":38,"loc":{"start":{"line":38,"column":86},"end":{"line":38,"column":101}}},"7":{"name":"(anonymous_7)","line":39,"loc":{"start":{"line":39,"column":39},"end":{"line":39,"column":51}}},"8":{"name":"(anonymous_8)","line":40,"loc":{"start":{"line":40,"column":41},"end":{"line":40,"column":53}}},"9":{"name":"(anonymous_9)","line":44,"loc":{"start":{"line":44,"column":34},"end":{"line":44,"column":46}}},"10":{"name":"(anonymous_10)","line":45,"loc":{"start":{"line":45,"column":36},"end":{"line":45,"column":48}}},"11":{"name":"(anonymous_11)","line":56,"loc":{"start":{"line":56,"column":38},"end":{"line":56,"column":72}}},"12":{"name":"(anonymous_12)","line":61,"loc":{"start":{"line":61,"column":18},"end":{"line":61,"column":30}}},"13":{"name":"(anonymous_13)","line":61,"loc":{"start":{"line":61,"column":51},"end":{"line":61,"column":63}}},"14":{"name":"(anonymous_14)","line":63,"loc":{"start":{"line":63,"column":18},"end":{"line":63,"column":30}}},"15":{"name":"(anonymous_15)","line":65,"loc":{"start":{"line":65,"column":18},"end":{"line":65,"column":30}}},"16":{"name":"(anonymous_16)","line":67,"loc":{"start":{"line":67,"column":18},"end":{"line":67,"column":30}}},"17":{"name":"(anonymous_17)","line":76,"loc":{"start":{"line":76,"column":24},"end":{"line":76,"column":40}}},"18":{"name":"(anonymous_18)","line":78,"loc":{"start":{"line":78,"column":46},"end":{"line":78,"column":61}}},"19":{"name":"(anonymous_19)","line":78,"loc":{"start":{"line":78,"column":90},"end":{"line":78,"column":105}}},"20":{"name":"stepAwaited","line":93,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":35}}},"21":{"name":"stepCallback","line":107,"loc":{"start":{"line":107,"column":8},"end":{"line":107,"column":43}}},"22":{"name":"stepResolved","line":113,"loc":{"start":{"line":113,"column":8},"end":{"line":113,"column":38}}},"23":{"name":"endOfIteration","line":119,"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":37}}},"24":{"name":"(anonymous_24)","line":133,"loc":{"start":{"line":133,"column":38},"end":{"line":133,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":38}},"6":{"start":{"line":11,"column":0},"end":{"line":137,"column":5}},"7":{"start":{"line":13,"column":4},"end":{"line":19,"column":5}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":38}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":36}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":40}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":40}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":48}},"13":{"start":{"line":21,"column":4},"end":{"line":54,"column":6}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":25}},"15":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":25,"column":12},"end":{"line":25,"column":49}},"17":{"start":{"line":27,"column":8},"end":{"line":30,"column":9}},"18":{"start":{"line":28,"column":12},"end":{"line":28,"column":35}},"19":{"start":{"line":29,"column":12},"end":{"line":29,"column":49}},"20":{"start":{"line":32,"column":8},"end":{"line":33,"column":50}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":50}},"22":{"start":{"line":35,"column":8},"end":{"line":46,"column":9}},"23":{"start":{"line":36,"column":12},"end":{"line":41,"column":14}},"24":{"start":{"line":37,"column":16},"end":{"line":38,"column":124}},"25":{"start":{"line":38,"column":20},"end":{"line":38,"column":124}},"26":{"start":{"line":38,"column":59},"end":{"line":38,"column":82}},"27":{"start":{"line":38,"column":103},"end":{"line":38,"column":120}},"28":{"start":{"line":39,"column":16},"end":{"line":39,"column":100}},"29":{"start":{"line":39,"column":53},"end":{"line":39,"column":96}},"30":{"start":{"line":40,"column":16},"end":{"line":40,"column":90}},"31":{"start":{"line":40,"column":55},"end":{"line":40,"column":87}},"32":{"start":{"line":44,"column":12},"end":{"line":44,"column":95}},"33":{"start":{"line":44,"column":48},"end":{"line":44,"column":91}},"34":{"start":{"line":45,"column":12},"end":{"line":45,"column":85}},"35":{"start":{"line":45,"column":50},"end":{"line":45,"column":82}},"36":{"start":{"line":48,"column":8},"end":{"line":53,"column":9}},"37":{"start":{"line":49,"column":33},"end":{"line":49,"column":57}},"38":{"start":{"line":50,"column":31},"end":{"line":50,"column":44}},"39":{"start":{"line":51,"column":32},"end":{"line":51,"column":63}},"40":{"start":{"line":52,"column":30},"end":{"line":52,"column":37}},"41":{"start":{"line":56,"column":4},"end":{"line":131,"column":6}},"42":{"start":{"line":57,"column":8},"end":{"line":57,"column":25}},"43":{"start":{"line":59,"column":8},"end":{"line":59,"column":43}},"44":{"start":{"line":60,"column":8},"end":{"line":67,"column":90}},"45":{"start":{"line":61,"column":12},"end":{"line":61,"column":92}},"46":{"start":{"line":61,"column":32},"end":{"line":61,"column":89}},"47":{"start":{"line":61,"column":65},"end":{"line":61,"column":85}},"48":{"start":{"line":62,"column":13},"end":{"line":67,"column":90}},"49":{"start":{"line":63,"column":12},"end":{"line":63,"column":69}},"50":{"start":{"line":63,"column":32},"end":{"line":63,"column":66}},"51":{"start":{"line":64,"column":13},"end":{"line":67,"column":90}},"52":{"start":{"line":65,"column":12},"end":{"line":65,"column":67}},"53":{"start":{"line":65,"column":32},"end":{"line":65,"column":64}},"54":{"start":{"line":67,"column":12},"end":{"line":67,"column":90}},"55":{"start":{"line":67,"column":32},"end":{"line":67,"column":87}},"56":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"57":{"start":{"line":70,"column":12},"end":{"line":70,"column":39}},"58":{"start":{"line":72,"column":8},"end":{"line":73,"column":32}},"59":{"start":{"line":73,"column":12},"end":{"line":73,"column":32}},"60":{"start":{"line":75,"column":8},"end":{"line":84,"column":9}},"61":{"start":{"line":76,"column":12},"end":{"line":80,"column":14}},"62":{"start":{"line":77,"column":16},"end":{"line":78,"column":128}},"63":{"start":{"line":78,"column":20},"end":{"line":78,"column":128}},"64":{"start":{"line":78,"column":63},"end":{"line":78,"column":86}},"65":{"start":{"line":78,"column":107},"end":{"line":78,"column":124}},"66":{"start":{"line":79,"column":16},"end":{"line":79,"column":22}},"67":{"start":{"line":83,"column":12},"end":{"line":83,"column":18}},"68":{"start":{"line":86,"column":8},"end":{"line":91,"column":9}},"69":{"start":{"line":87,"column":33},"end":{"line":87,"column":61}},"70":{"start":{"line":88,"column":31},"end":{"line":88,"column":44}},"71":{"start":{"line":89,"column":32},"end":{"line":89,"column":49}},"72":{"start":{"line":90,"column":30},"end":{"line":90,"column":47}},"73":{"start":{"line":93,"column":8},"end":{"line":106,"column":9}},"74":{"start":{"line":94,"column":12},"end":{"line":105,"column":13}},"75":{"start":{"line":95,"column":16},"end":{"line":100,"column":17}},"76":{"start":{"line":96,"column":20},"end":{"line":96,"column":38}},"77":{"start":{"line":97,"column":20},"end":{"line":98,"column":48}},"78":{"start":{"line":98,"column":24},"end":{"line":98,"column":48}},"79":{"start":{"line":99,"column":20},"end":{"line":99,"column":41}},"80":{"start":{"line":103,"column":16},"end":{"line":103,"column":36}},"81":{"start":{"line":104,"column":16},"end":{"line":104,"column":26}},"82":{"start":{"line":107,"column":8},"end":{"line":112,"column":9}},"83":{"start":{"line":108,"column":12},"end":{"line":109,"column":43}},"84":{"start":{"line":109,"column":16},"end":{"line":109,"column":43}},"85":{"start":{"line":110,"column":12},"end":{"line":110,"column":35}},"86":{"start":{"line":111,"column":12},"end":{"line":111,"column":30}},"87":{"start":{"line":113,"column":8},"end":{"line":118,"column":9}},"88":{"start":{"line":114,"column":12},"end":{"line":115,"column":40}},"89":{"start":{"line":115,"column":16},"end":{"line":115,"column":40}},"90":{"start":{"line":116,"column":12},"end":{"line":116,"column":35}},"91":{"start":{"line":117,"column":12},"end":{"line":117,"column":30}},"92":{"start":{"line":119,"column":8},"end":{"line":130,"column":9}},"93":{"start":{"line":120,"column":12},"end":{"line":121,"column":57}},"94":{"start":{"line":121,"column":16},"end":{"line":121,"column":57}},"95":{"start":{"line":122,"column":12},"end":{"line":129,"column":13}},"96":{"start":{"line":123,"column":16},"end":{"line":128,"column":17}},"97":{"start":{"line":124,"column":20},"end":{"line":124,"column":51}},"98":{"start":{"line":127,"column":20},"end":{"line":127,"column":80}},"99":{"start":{"line":133,"column":4},"end":{"line":135,"column":6}},"100":{"start":{"line":134,"column":8},"end":{"line":134,"column":27}},"101":{"start":{"line":136,"column":4},"end":{"line":136,"column":25}},"102":{"start":{"line":138,"column":0},"end":{"line":138,"column":31}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":8}},{"start":{"line":32,"column":8},"end":{"line":32,"column":8}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":16}},{"start":{"line":37,"column":16},"end":{"line":37,"column":16}}]},"6":{"line":48,"type":"switch","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":57}},{"start":{"line":50,"column":12},"end":{"line":50,"column":44}},{"start":{"line":51,"column":12},"end":{"line":51,"column":63}},{"start":{"line":52,"column":12},"end":{"line":52,"column":37}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":13},"end":{"line":62,"column":13}},{"start":{"line":62,"column":13},"end":{"line":62,"column":13}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":13},"end":{"line":64,"column":13}},{"start":{"line":64,"column":13},"end":{"line":64,"column":13}}]},"10":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"11":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":48}},{"start":{"line":69,"column":52},"end":{"line":69,"column":86}}]},"12":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"13":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"14":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":16},"end":{"line":77,"column":16}},{"start":{"line":77,"column":16},"end":{"line":77,"column":16}}]},"15":{"line":86,"type":"switch","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":61}},{"start":{"line":88,"column":12},"end":{"line":88,"column":44}},{"start":{"line":89,"column":12},"end":{"line":89,"column":49}},{"start":{"line":90,"column":12},"end":{"line":90,"column":47}}]},"16":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":97,"column":20}},{"start":{"line":97,"column":20},"end":{"line":97,"column":20}}]},"17":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"18":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":19}},{"start":{"line":108,"column":23},"end":{"line":108,"column":34}}]},"19":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":12}},{"start":{"line":114,"column":12},"end":{"line":114,"column":12}}]},"20":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":12},"end":{"line":120,"column":12}},{"start":{"line":120,"column":12},"end":{"line":120,"column":12}}]},"21":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":22},"end":{"line":121,"column":39}},{"start":{"line":121,"column":42},"end":{"line":121,"column":56}}]},"22":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":12}},{"start":{"line":122,"column":12},"end":{"line":122,"column":12}}]},"23":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":16},"end":{"line":123,"column":16}},{"start":{"line":123,"column":16},"end":{"line":123,"column":16}}]},"24":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":26},"end":{"line":127,"column":50}},{"start":{"line":127,"column":53},"end":{"line":127,"column":79}}]}},"code":["var FiberMgr = require('./fiberManager');","var Semaphore = require('./semaphore');","var Config = require('./config');","var defer = require('./defer');","var await = require('../await/index');","/**"," * Asynchronous analogue to an ES6 Iterator. Rather than return each value/done"," * result synchronously, the next() function notifies a promise and/or callback"," * when the next result is ready."," */","var AsyncIterator = (function () {","    /** Construct a new AsyncIterator instance. This will create a fiber. */","    function AsyncIterator(runContext, semaphore, returnValue, acceptsCallback) {","        this._runContext = runContext;","        this._semaphore = semaphore;","        this._fiber = FiberMgr.create();","        this._returnValue = returnValue;","        this._acceptsCallback = acceptsCallback;","    }","    /** Fetch the next result from the iterator. */","    AsyncIterator.prototype.next = function (callback) {","        var _this = this;","        // Configure the run context.","        if (this._acceptsCallback) {","            this._runContext.callback = callback; // May be null, in which case it won't be used.","        }","        if (this._returnValue !== Config.NONE) {","            var resolver = defer();","            this._runContext.resolver = resolver;","        }","        // Remove concurrency restrictions for nested calls, to avoid race conditions.","        if (FiberMgr.isExecutingInFiber())","            this._semaphore = Semaphore.unlimited;","        // Run the fiber until it either yields a value or completes. For thunks, this is a lazy operation.","        if (this._returnValue === Config.THUNK) {","            var thunk = function (done) {","                if (done)","                    resolver.promise.then(function (val) { return done(null, val); }, function (err) { return done(err); });","                _this._semaphore.enter(function () { return _this._fiber.run(_this._runContext); });","                _this._runContext.done = function () { return _this._semaphore.leave(); };","            };","        }","        else {","            this._semaphore.enter(function () { return _this._fiber.run(_this._runContext); });","            this._runContext.done = function () { return _this._semaphore.leave(); };","        }","        // Return the appropriate value.","        switch (this._returnValue) {","            case Config.PROMISE: return resolver.promise;","            case Config.THUNK: return thunk;","            case Config.RESULT: return await(resolver.promise);","            case Config.NONE: return;","        }","    };","    /** Enumerate the entire iterator, calling callback with each result. */","    AsyncIterator.prototype.forEach = function (callback, doneCallback) {","        var _this = this;","        // Create a function that calls next() in an asynchronous loop until the iteration is complete.","        var run, runCtx = this._runContext;","        if (this._returnValue === Config.RESULT)","            run = function () { return stepAwaited(function () { return _this.next(); }); };","        else if (this._returnValue === Config.THUNK)","            run = function () { return _this.next()(stepCallback); };","        else if (this._acceptsCallback)","            run = function () { return _this.next(stepCallback); };","        else","            run = function () { return _this.next().then(stepResolved, endOfIteration); };","        // Configure the resolver and callback to be invoked at the end of the iteration.","        if (this._returnValue === Config.PROMISE || this._returnValue === Config.THUNK) {","            var doneResolver = defer();","        }","        if (!this._acceptsCallback)","            doneCallback = null;","        // Execute the entire iteration. For thunks, this is a lazy operation.","        if (this._returnValue === Config.THUNK) {","            var thunk = function (done) {","                if (done)","                    doneResolver.promise.then(function (val) { return done(null, val); }, function (err) { return done(err); });","                run();","            };","        }","        else {","            run();","        }","        // Return the appropriate value.","        switch (this._returnValue) {","            case Config.PROMISE: return doneResolver.promise;","            case Config.THUNK: return thunk;","            case Config.RESULT: return undefined;","            case Config.NONE: return undefined;","        }","        // These functions handle stepping through and finalising the iteration.","        function stepAwaited(next) {","            try {","                while (true) {","                    var item = next();","                    if (item.done)","                        return endOfIteration();","                    callback(item.value);","                }","            }","            catch (err) {","                endOfIteration(err);","                throw err;","            }","        }","        function stepCallback(err, result) {","            if (err || result.done)","                return endOfIteration(err);","            callback(result.value);","            setImmediate(run);","        }","        function stepResolved(result) {","            if (result.done)","                return endOfIteration();","            callback(result.value);","            setImmediate(run);","        }","        function endOfIteration(err) {","            if (doneCallback)","                err ? doneCallback(err) : doneCallback();","            if (doneResolver) {","                if (FiberMgr.isExecutingInFiber()) {","                    runCtx.resolver = doneResolver; // FiberManager will handle it","                }","                else {","                    err ? doneResolver.reject(err) : doneResolver.resolve(null);","                }","            }","        }","    };","    /** Release resources associated with this object (i.e., the fiber). */","    AsyncIterator.prototype.destroy = function () {","        this._fiber = null;","    };","    return AsyncIterator;","})();","module.exports = AsyncIterator;","//# sourceMappingURL=asyncIterator.js.map"],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"11":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"21":1,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"32":0,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"44":0,"45":0,"48":0,"49":0,"50":0,"51":0,"52":0,"56":1,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"67":0,"69":0,"70":0,"72":0,"73":0,"75":0,"76":0,"77":0,"78":0,"79":0,"83":0,"86":0,"87":0,"88":0,"89":0,"90":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"103":0,"104":0,"107":1,"108":0,"109":0,"110":0,"111":0,"113":1,"114":0,"115":0,"116":0,"117":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"127":0,"133":1,"134":0,"136":1,"138":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/defer.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/async/defer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"defer","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":17}}},"2":{"name":"(anonymous_2)","line":5,"loc":{"start":{"line":5,"column":30},"end":{"line":5,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":3,"column":0},"end":{"line":14,"column":1}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":24}},"4":{"start":{"line":5,"column":4},"end":{"line":8,"column":7}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":31}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":30}},"7":{"start":{"line":9,"column":4},"end":{"line":13,"column":6}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":23}}},"branchMap":{},"code":["var Promise = require('bluebird');","/** Equivalent to Promise.defer() from bluebird 1.x. Added here because Promise.defer() is deprecated as of bluebird 2.x */","function defer() {","    var resolve, reject;","    var promise = new Promise(function () {","        resolve = arguments[0];","        reject = arguments[1];","    });","    return {","        resolve: resolve,","        reject: reject,","        promise: promise","    };","}","module.exports = defer;","//# sourceMappingURL=defer.js.map"],"l":{"1":1,"3":1,"4":0,"5":0,"6":0,"7":0,"9":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/await/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/await/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}}},"branchMap":{},"code":["var makeAwaitFunc = require('./makeAwaitFunc');","/**","  * Suspends a suspendable function until the given awaitable expression produces","  * a result. If the given expression produces an error, then an exception is raised","  * in the suspendable function.","  * @param {any} expr - The awaitable expression whose results are to be awaited.","  * @returns {any} The final result of the given awaitable expression.","  */","var await = makeAwaitFunc();","await.in = makeAwaitFunc('in');","await.top = makeAwaitFunc('top');","module.exports = await;","//# sourceMappingURL=index.js.map"],"l":{"1":1,"9":1,"10":1,"11":1,"12":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/await/makeAwaitFunc.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/src/await/makeAwaitFunc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":1,"10":1,"11":2,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":1},"b":{"1":[1,1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":3,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"makeAwaitFunc","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":27},"end":{"line":11,"column":40}}},"3":{"name":"getExtraInfo","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}}},"4":{"name":"await","line":17,"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":28}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":37}}},"6":{"name":"(anonymous_6)","line":40,"loc":{"start":{"line":40,"column":81},"end":{"line":40,"column":96}}},"7":{"name":"(anonymous_7)","line":44,"loc":{"start":{"line":44,"column":17},"end":{"line":44,"column":37}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":50},"end":{"line":56,"column":65}}},"9":{"name":"(anonymous_9)","line":56,"loc":{"start":{"line":56,"column":110},"end":{"line":56,"column":125}}},"10":{"name":"(anonymous_10)","line":59,"loc":{"start":{"line":59,"column":57},"end":{"line":59,"column":72}}},"11":{"name":"(anonymous_11)","line":59,"loc":{"start":{"line":59,"column":116},"end":{"line":59,"column":131}}},"12":{"name":"(anonymous_12)","line":64,"loc":{"start":{"line":64,"column":25},"end":{"line":64,"column":37}}},"13":{"name":"traverseInPlace","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":37}}},"14":{"name":"traverseClone","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":35}}},"15":{"name":"trackAndReplaceWithResolvedValue","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":52}}},"16":{"name":"(anonymous_16)","line":117,"loc":{"start":{"line":117,"column":11},"end":{"line":117,"column":31}}},"17":{"name":"(anonymous_17)","line":128,"loc":{"start":{"line":128,"column":21},"end":{"line":128,"column":39}}},"18":{"name":"(anonymous_18)","line":128,"loc":{"start":{"line":128,"column":63},"end":{"line":128,"column":78}}},"19":{"name":"thunkToPromise","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":31}}},"20":{"name":"(anonymous_20)","line":134,"loc":{"start":{"line":134,"column":23},"end":{"line":134,"column":50}}},"21":{"name":"(anonymous_21)","line":135,"loc":{"start":{"line":135,"column":23},"end":{"line":135,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":14,"column":1}},"5":{"start":{"line":9,"column":4},"end":{"line":13,"column":5}},"6":{"start":{"line":10,"column":19},"end":{"line":10,"column":56}},"7":{"start":{"line":11,"column":20},"end":{"line":11,"column":85}},"8":{"start":{"line":11,"column":42},"end":{"line":11,"column":82}},"9":{"start":{"line":12,"column":17},"end":{"line":12,"column":52}},"10":{"start":{"line":16,"column":0},"end":{"line":69,"column":1}},"11":{"start":{"line":17,"column":4},"end":{"line":68,"column":6}},"12":{"start":{"line":19,"column":8},"end":{"line":22,"column":9}},"13":{"start":{"line":20,"column":12},"end":{"line":21,"column":85}},"14":{"start":{"line":24,"column":8},"end":{"line":32,"column":9}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":36}},"16":{"start":{"line":28,"column":12},"end":{"line":28,"column":47}},"17":{"start":{"line":29,"column":12},"end":{"line":30,"column":39}},"18":{"start":{"line":30,"column":16},"end":{"line":30,"column":39}},"19":{"start":{"line":31,"column":12},"end":{"line":31,"column":39}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},"21":{"start":{"line":35,"column":8},"end":{"line":65,"column":9}},"22":{"start":{"line":40,"column":12},"end":{"line":40,"column":146}},"23":{"start":{"line":40,"column":39},"end":{"line":40,"column":77}},"24":{"start":{"line":40,"column":98},"end":{"line":40,"column":142}},"25":{"start":{"line":42,"column":13},"end":{"line":65,"column":9}},"26":{"start":{"line":44,"column":12},"end":{"line":47,"column":49}},"27":{"start":{"line":44,"column":39},"end":{"line":47,"column":31}},"28":{"start":{"line":45,"column":16},"end":{"line":45,"column":37}},"29":{"start":{"line":47,"column":16},"end":{"line":47,"column":31}},"30":{"start":{"line":47,"column":32},"end":{"line":47,"column":45}},"31":{"start":{"line":49,"column":13},"end":{"line":65,"column":9}},"32":{"start":{"line":53,"column":12},"end":{"line":53,"column":37}},"33":{"start":{"line":54,"column":12},"end":{"line":54,"column":85}},"34":{"start":{"line":55,"column":12},"end":{"line":60,"column":13}},"35":{"start":{"line":56,"column":16},"end":{"line":56,"column":175}},"36":{"start":{"line":56,"column":67},"end":{"line":56,"column":106}},"37":{"start":{"line":56,"column":127},"end":{"line":56,"column":171}},"38":{"start":{"line":59,"column":16},"end":{"line":59,"column":181}},"39":{"start":{"line":59,"column":74},"end":{"line":59,"column":112}},"40":{"start":{"line":59,"column":133},"end":{"line":59,"column":177}},"41":{"start":{"line":64,"column":12},"end":{"line":64,"column":73}},"42":{"start":{"line":64,"column":39},"end":{"line":64,"column":55}},"43":{"start":{"line":64,"column":56},"end":{"line":64,"column":69}},"44":{"start":{"line":67,"column":8},"end":{"line":67,"column":29}},"45":{"start":{"line":71,"column":0},"end":{"line":88,"column":1}},"46":{"start":{"line":72,"column":4},"end":{"line":86,"column":5}},"47":{"start":{"line":73,"column":8},"end":{"line":73,"column":27}},"48":{"start":{"line":74,"column":8},"end":{"line":77,"column":9}},"49":{"start":{"line":75,"column":12},"end":{"line":75,"column":43}},"50":{"start":{"line":76,"column":12},"end":{"line":76,"column":26}},"51":{"start":{"line":79,"column":9},"end":{"line":86,"column":5}},"52":{"start":{"line":80,"column":8},"end":{"line":85,"column":9}},"53":{"start":{"line":81,"column":12},"end":{"line":82,"column":25}},"54":{"start":{"line":82,"column":16},"end":{"line":82,"column":25}},"55":{"start":{"line":83,"column":12},"end":{"line":83,"column":45}},"56":{"start":{"line":84,"column":12},"end":{"line":84,"column":28}},"57":{"start":{"line":87,"column":4},"end":{"line":87,"column":13}},"58":{"start":{"line":90,"column":0},"end":{"line":113,"column":1}},"59":{"start":{"line":91,"column":4},"end":{"line":91,"column":15}},"60":{"start":{"line":92,"column":4},"end":{"line":111,"column":5}},"61":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"62":{"start":{"line":94,"column":8},"end":{"line":94,"column":32}},"63":{"start":{"line":95,"column":8},"end":{"line":98,"column":9}},"64":{"start":{"line":96,"column":12},"end":{"line":96,"column":53}},"65":{"start":{"line":97,"column":12},"end":{"line":97,"column":31}},"66":{"start":{"line":100,"column":9},"end":{"line":111,"column":5}},"67":{"start":{"line":101,"column":8},"end":{"line":101,"column":20}},"68":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"69":{"start":{"line":103,"column":12},"end":{"line":106,"column":13}},"70":{"start":{"line":104,"column":16},"end":{"line":104,"column":61}},"71":{"start":{"line":105,"column":16},"end":{"line":105,"column":37}},"72":{"start":{"line":110,"column":8},"end":{"line":110,"column":19}},"73":{"start":{"line":112,"column":4},"end":{"line":112,"column":18}},"74":{"start":{"line":115,"column":0},"end":{"line":131,"column":1}},"75":{"start":{"line":117,"column":4},"end":{"line":130,"column":6}},"76":{"start":{"line":119,"column":8},"end":{"line":119,"column":27}},"77":{"start":{"line":120,"column":8},"end":{"line":121,"column":19}},"78":{"start":{"line":121,"column":12},"end":{"line":121,"column":19}},"79":{"start":{"line":123,"column":8},"end":{"line":124,"column":38}},"80":{"start":{"line":124,"column":12},"end":{"line":124,"column":38}},"81":{"start":{"line":126,"column":8},"end":{"line":129,"column":9}},"82":{"start":{"line":127,"column":12},"end":{"line":127,"column":31}},"83":{"start":{"line":128,"column":12},"end":{"line":128,"column":83}},"84":{"start":{"line":128,"column":41},"end":{"line":128,"column":59}},"85":{"start":{"line":133,"column":0},"end":{"line":138,"column":1}},"86":{"start":{"line":134,"column":4},"end":{"line":137,"column":7}},"87":{"start":{"line":135,"column":8},"end":{"line":135,"column":90}},"88":{"start":{"line":135,"column":45},"end":{"line":135,"column":87}},"89":{"start":{"line":136,"column":8},"end":{"line":136,"column":24}},"90":{"start":{"line":139,"column":0},"end":{"line":139,"column":31}}},"branchMap":{"1":{"line":9,"type":"switch","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":56}},{"start":{"line":11,"column":8},"end":{"line":11,"column":85}},{"start":{"line":12,"column":8},"end":{"line":12,"column":52}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":16}},{"start":{"line":35,"column":20},"end":{"line":35,"column":43}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":13}},{"start":{"line":42,"column":13},"end":{"line":42,"column":13}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":39},"end":{"line":44,"column":39}},{"start":{"line":44,"column":39},"end":{"line":44,"column":39}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":13}},{"start":{"line":49,"column":13},"end":{"line":49,"column":13}}]},"9":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":17},"end":{"line":49,"column":32}},{"start":{"line":49,"column":36},"end":{"line":49,"column":57}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":12}},{"start":{"line":55,"column":12},"end":{"line":55,"column":12}}]},"11":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":9},"end":{"line":79,"column":9}},{"start":{"line":79,"column":9},"end":{"line":79,"column":9}}]},"13":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":12},"end":{"line":81,"column":12}},{"start":{"line":81,"column":12},"end":{"line":81,"column":12}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"15":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":9},"end":{"line":100,"column":9}},{"start":{"line":100,"column":9},"end":{"line":100,"column":9}}]},"16":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":12}},{"start":{"line":103,"column":12},"end":{"line":103,"column":12}}]},"17":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"18":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"19":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":8}},{"start":{"line":126,"column":8},"end":{"line":126,"column":8}}]},"20":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":59},"end":{"line":135,"column":70}},{"start":{"line":135,"column":73},"end":{"line":135,"column":85}}]}},"code":["var Fiber = require('../fibers');","var Promise = require('bluebird');","var _ = require('lodash');","/** Function for creating a specific variant of the await() function."," *  @param {string} variant - Recognised values: undefined, 'in', 'top'."," */","function makeAwaitFunc(variant) {","    // Return an await function tailored to the given options.","    switch (variant) {","        case 'in': return getExtraInfo(traverseInPlace);","        case 'top': return function (n) { return getExtraInfo(traverseInPlace, n); };","        default: return getExtraInfo(traverseClone);","    }","}","/** Helper function for makeAwaitFunc(). */","function getExtraInfo(traverse, topN) {","    return function await() {","        // Ensure this function is executing inside a fiber.","        if (!Fiber.current) {","            throw new Error('await functions, yield functions, and value-returning suspendable ' +","                'functions may only be called from inside a suspendable function. ');","        }","        // Parse argument(s). If not a single argument, treat it like an array was passed in.","        if (arguments.length === 1) {","            var expr = arguments[0];","        }","        else {","            expr = new Array(arguments.length);","            for (var i = 0; i < arguments.length; ++i)","                expr[i] = arguments[i];","            traverse = traverseInPlace;","        }","        // Handle each supported 'awaitable' appropriately...","        var fiber = Fiber.current;","        if (expr && _.isFunction(expr.then)) {","            // A promise: resume the coroutine with the resolved value, or throw the rejection value into it.","            // NB: ensure the handlers return null to avoid bluebird 3.x warning 'a promise was created in a","            //     handler but none were returned from it'. This occurs if the next resumption of the suspendable","            //     function (i.e. in the client's code) creates a bluebird 3.x promise and then awaits it.","            expr.then(function (val) { return (fiber.run(val), fiber = null); }, function (err) { return (fiber.throwInto(err), fiber = null); });","        }","        else if (_.isFunction(expr)) {","            // A thunk: resume the coroutine with the callback value, or throw the errback value into it.","            expr(function (err, val) { if (err)","                fiber.throwInto(err);","            else","                fiber.run(val); fiber = null; });","        }","        else if (_.isArray(expr) || _.isPlainObject(expr)) {","            // An array or plain object: resume the coroutine with a deep clone of the array/object,","            // where all contained promises and thunks have been replaced by their resolved values.","            // NB: ensure handlers return null (see similar comment above).","            var trackedPromises = [];","            expr = traverse(expr, trackAndReplaceWithResolvedValue(trackedPromises));","            if (!topN) {","                Promise.all(trackedPromises).then(function (val) { return (fiber.run(expr), fiber = null); }, function (err) { return (fiber.throwInto(err), fiber = null); });","            }","            else {","                Promise.some(trackedPromises, topN).then(function (val) { return (fiber.run(val), fiber = null); }, function (err) { return (fiber.throwInto(err), fiber = null); });","            }","        }","        else {","            // Anything else: resume the coroutine immediately with the value.","            setImmediate(function () { fiber.run(expr); fiber = null; });","        }","        // Suspend the current fiber until the one of the above handlers resumes it again.","        return Fiber.yield();","    };","}","/** In-place (ie non-cloning) object traversal. */","function traverseInPlace(o, visitor) {","    if (_.isArray(o)) {","        var len = o.length;","        for (var i = 0; i < len; ++i) {","            traverseInPlace(o[i], visitor);","            visitor(o, i);","        }","    }","    else if (_.isPlainObject(o)) {","        for (var key in o) {","            if (!o.hasOwnProperty(key))","                continue;","            traverseInPlace(o[key], visitor);","            visitor(o, key);","        }","    }","    return o;","}","/** Object traversal with cloning. */","function traverseClone(o, visitor) {","    var result;","    if (_.isArray(o)) {","        var len = o.length;","        result = new Array(len);","        for (var i = 0; i < len; ++i) {","            result[i] = traverseClone(o[i], visitor);","            visitor(result, i);","        }","    }","    else if (_.isPlainObject(o)) {","        result = {};","        for (var key in o) {","            if (o.hasOwnProperty(key)) {","                result[key] = traverseClone(o[key], visitor);","                visitor(result, key);","            }","        }","    }","    else {","        result = o;","    }","    return result;","}","/** Visitor function factory for handling thunks and promises in awaited object graphs. */","function trackAndReplaceWithResolvedValue(tracking) {","    // Return a visitor function closed over the specified tracking array.","    return function (obj, key) {","        // Get the value being visited, and return early if it's falsy.","        var val = obj[key];","        if (!val)","            return;","        // If the value is a thunk, convert it to an equivalent promise.","        if (_.isFunction(val))","            val = thunkToPromise(val);","        // If the value is a promise, add it to the tracking array, and replace it with its value when resolved.","        if (_.isFunction(val.then)) {","            tracking.push(val);","            val.then(function (result) { obj[key] = result; }, function (err) { });","        }","    };","}","/** Convert a thunk to a promise. */","function thunkToPromise(thunk) {","    return new Promise(function (resolve, reject) {","        var callback = function (err, val) { return (err ? reject(err) : resolve(val)); };","        thunk(callback);","    });","}","module.exports = makeAwaitFunc;","//# sourceMappingURL=makeAwaitFunc.js.map"],"l":{"1":1,"2":1,"3":1,"7":1,"9":3,"10":1,"11":1,"12":1,"16":1,"17":2,"19":0,"20":0,"24":0,"25":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"40":0,"42":0,"44":0,"45":0,"47":0,"49":0,"53":0,"54":0,"55":0,"56":0,"59":0,"64":0,"67":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"87":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"110":0,"112":0,"115":1,"117":0,"119":0,"120":0,"121":0,"123":0,"124":0,"126":0,"127":0,"128":0,"133":1,"134":0,"135":0,"136":0,"139":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/async.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/async.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}}},"branchMap":{},"code":["﻿var async = require('./src/async');","module.exports = async;",""],"l":{"1":1,"2":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/await.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/await.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":36}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}}},"branchMap":{},"code":["﻿var await = require('./src/await');","module.exports = await;",""],"l":{"1":1,"2":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/benchmark.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/benchmark.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":57,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":39}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":25},"end":{"line":61,"column":41}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":11},"end":{"line":74,"column":33}}},"4":{"name":"benchmark","line":86,"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":21}}},"5":{"name":"(anonymous_5)","line":94,"loc":{"start":{"line":94,"column":8},"end":{"line":94,"column":27}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":24},"end":{"line":96,"column":47}}},"7":{"name":"(anonymous_7)","line":124,"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":23}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":44},"end":{"line":129,"column":65}}},"9":{"name":"run","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":31}}},"10":{"name":"(anonymous_10)","line":160,"loc":{"start":{"line":160,"column":8},"end":{"line":160,"column":32}}},"11":{"name":"(anonymous_11)","line":164,"loc":{"start":{"line":164,"column":16},"end":{"line":164,"column":40}}},"12":{"name":"(anonymous_12)","line":167,"loc":{"start":{"line":167,"column":27},"end":{"line":167,"column":38}}},"13":{"name":"(anonymous_13)","line":173,"loc":{"start":{"line":173,"column":16},"end":{"line":173,"column":31}}},"14":{"name":"(anonymous_14)","line":178,"loc":{"start":{"line":178,"column":8},"end":{"line":178,"column":27}}},"15":{"name":"createSampleFunction","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":195,"column":32}}},"16":{"name":"(anonymous_16)","line":202,"loc":{"start":{"line":202,"column":25},"end":{"line":202,"column":45}}},"17":{"name":"(anonymous_17)","line":203,"loc":{"start":{"line":203,"column":45},"end":{"line":203,"column":68}}},"18":{"name":"(anonymous_18)","line":211,"loc":{"start":{"line":211,"column":25},"end":{"line":211,"column":45}}},"19":{"name":"(anonymous_19)","line":212,"loc":{"start":{"line":212,"column":36},"end":{"line":212,"column":59}}},"20":{"name":"(anonymous_20)","line":221,"loc":{"start":{"line":221,"column":25},"end":{"line":221,"column":45}}},"21":{"name":"(anonymous_21)","line":222,"loc":{"start":{"line":222,"column":54},"end":{"line":222,"column":77}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":29}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":58}},"5":{"start":{"line":5,"column":6},"end":{"line":5,"column":41}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":10,"column":0},"end":{"line":15,"column":2}},"8":{"start":{"line":18,"column":0},"end":{"line":26,"column":2}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":43}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":26}},"12":{"start":{"line":38,"column":0},"end":{"line":38,"column":28}},"13":{"start":{"line":40,"column":0},"end":{"line":40,"column":28}},"14":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}},"15":{"start":{"line":44,"column":0},"end":{"line":44,"column":43}},"16":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}},"17":{"start":{"line":46,"column":0},"end":{"line":46,"column":27}},"18":{"start":{"line":47,"column":0},"end":{"line":47,"column":43}},"19":{"start":{"line":53,"column":0},"end":{"line":53,"column":16}},"20":{"start":{"line":54,"column":0},"end":{"line":54,"column":16}},"21":{"start":{"line":55,"column":0},"end":{"line":55,"column":15}},"22":{"start":{"line":56,"column":0},"end":{"line":66,"column":1}},"23":{"start":{"line":57,"column":4},"end":{"line":60,"column":7}},"24":{"start":{"line":58,"column":8},"end":{"line":58,"column":30}},"25":{"start":{"line":59,"column":8},"end":{"line":59,"column":60}},"26":{"start":{"line":61,"column":4},"end":{"line":65,"column":7}},"27":{"start":{"line":62,"column":8},"end":{"line":62,"column":36}},"28":{"start":{"line":63,"column":8},"end":{"line":63,"column":35}},"29":{"start":{"line":64,"column":8},"end":{"line":64,"column":39}},"30":{"start":{"line":70,"column":0},"end":{"line":83,"column":1}},"31":{"start":{"line":71,"column":4},"end":{"line":71,"column":58}},"32":{"start":{"line":72,"column":4},"end":{"line":72,"column":40}},"33":{"start":{"line":73,"column":4},"end":{"line":73,"column":66}},"34":{"start":{"line":74,"column":4},"end":{"line":80,"column":7}},"35":{"start":{"line":75,"column":8},"end":{"line":75,"column":35}},"36":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"37":{"start":{"line":77,"column":12},"end":{"line":77,"column":94}},"38":{"start":{"line":78,"column":12},"end":{"line":78,"column":72}},"39":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"40":{"start":{"line":86,"column":0},"end":{"line":147,"column":1}},"41":{"start":{"line":87,"column":4},"end":{"line":87,"column":58}},"42":{"start":{"line":88,"column":4},"end":{"line":88,"column":40}},"43":{"start":{"line":89,"column":4},"end":{"line":89,"column":30}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":105}},"45":{"start":{"line":91,"column":4},"end":{"line":91,"column":19}},"46":{"start":{"line":92,"column":4},"end":{"line":146,"column":11}},"47":{"start":{"line":95,"column":12},"end":{"line":95,"column":51}},"48":{"start":{"line":96,"column":12},"end":{"line":122,"column":15}},"49":{"start":{"line":97,"column":16},"end":{"line":121,"column":17}},"50":{"start":{"line":98,"column":20},"end":{"line":98,"column":30}},"51":{"start":{"line":100,"column":20},"end":{"line":100,"column":52}},"52":{"start":{"line":101,"column":20},"end":{"line":101,"column":90}},"53":{"start":{"line":102,"column":20},"end":{"line":109,"column":31}},"54":{"start":{"line":110,"column":20},"end":{"line":118,"column":21}},"55":{"start":{"line":111,"column":24},"end":{"line":117,"column":44}},"56":{"start":{"line":119,"column":20},"end":{"line":119,"column":44}},"57":{"start":{"line":120,"column":20},"end":{"line":120,"column":27}},"58":{"start":{"line":125,"column":12},"end":{"line":145,"column":13}},"59":{"start":{"line":126,"column":16},"end":{"line":126,"column":33}},"60":{"start":{"line":127,"column":16},"end":{"line":127,"column":31}},"61":{"start":{"line":129,"column":16},"end":{"line":129,"column":89}},"62":{"start":{"line":129,"column":67},"end":{"line":129,"column":85}},"63":{"start":{"line":130,"column":16},"end":{"line":130,"column":65}},"64":{"start":{"line":131,"column":20},"end":{"line":135,"column":42}},"65":{"start":{"line":136,"column":16},"end":{"line":136,"column":65}},"66":{"start":{"line":137,"column":16},"end":{"line":140,"column":17}},"67":{"start":{"line":138,"column":20},"end":{"line":138,"column":102}},"68":{"start":{"line":139,"column":20},"end":{"line":139,"column":80}},"69":{"start":{"line":141,"column":16},"end":{"line":144,"column":17}},"70":{"start":{"line":142,"column":20},"end":{"line":142,"column":94}},"71":{"start":{"line":143,"column":20},"end":{"line":143,"column":61}},"72":{"start":{"line":151,"column":0},"end":{"line":192,"column":1}},"73":{"start":{"line":152,"column":4},"end":{"line":152,"column":99}},"74":{"start":{"line":153,"column":4},"end":{"line":153,"column":37}},"75":{"start":{"line":154,"column":4},"end":{"line":154,"column":31}},"76":{"start":{"line":155,"column":4},"end":{"line":155,"column":31}},"77":{"start":{"line":156,"column":4},"end":{"line":156,"column":29}},"78":{"start":{"line":157,"column":4},"end":{"line":157,"column":33}},"79":{"start":{"line":158,"column":4},"end":{"line":191,"column":6}},"80":{"start":{"line":161,"column":12},"end":{"line":161,"column":54}},"81":{"start":{"line":162,"column":12},"end":{"line":176,"column":14}},"82":{"start":{"line":165,"column":20},"end":{"line":165,"column":47}},"83":{"start":{"line":166,"column":20},"end":{"line":166,"column":53}},"84":{"start":{"line":167,"column":20},"end":{"line":171,"column":23}},"85":{"start":{"line":168,"column":24},"end":{"line":168,"column":55}},"86":{"start":{"line":169,"column":24},"end":{"line":169,"column":60}},"87":{"start":{"line":170,"column":24},"end":{"line":170,"column":36}},"88":{"start":{"line":174,"column":20},"end":{"line":174,"column":35}},"89":{"start":{"line":179,"column":12},"end":{"line":179,"column":39}},"90":{"start":{"line":180,"column":12},"end":{"line":180,"column":47}},"91":{"start":{"line":180,"column":23},"end":{"line":180,"column":37}},"92":{"start":{"line":180,"column":38},"end":{"line":180,"column":45}},"93":{"start":{"line":181,"column":12},"end":{"line":181,"column":65}},"94":{"start":{"line":182,"column":12},"end":{"line":182,"column":60}},"95":{"start":{"line":183,"column":12},"end":{"line":189,"column":15}},"96":{"start":{"line":195,"column":0},"end":{"line":230,"column":1}},"97":{"start":{"line":196,"column":4},"end":{"line":196,"column":95}},"98":{"start":{"line":197,"column":4},"end":{"line":197,"column":44}},"99":{"start":{"line":198,"column":4},"end":{"line":198,"column":73}},"100":{"start":{"line":198,"column":21},"end":{"line":198,"column":73}},"101":{"start":{"line":199,"column":4},"end":{"line":228,"column":5}},"102":{"start":{"line":201,"column":12},"end":{"line":201,"column":55}},"103":{"start":{"line":202,"column":12},"end":{"line":206,"column":14}},"104":{"start":{"line":203,"column":16},"end":{"line":205,"column":19}},"105":{"start":{"line":204,"column":20},"end":{"line":204,"column":56}},"106":{"start":{"line":207,"column":12},"end":{"line":207,"column":18}},"107":{"start":{"line":210,"column":12},"end":{"line":210,"column":22}},"108":{"start":{"line":211,"column":12},"end":{"line":215,"column":14}},"109":{"start":{"line":212,"column":16},"end":{"line":214,"column":19}},"110":{"start":{"line":213,"column":20},"end":{"line":213,"column":56}},"111":{"start":{"line":216,"column":12},"end":{"line":216,"column":18}},"112":{"start":{"line":219,"column":12},"end":{"line":219,"column":55}},"113":{"start":{"line":220,"column":12},"end":{"line":220,"column":59}},"114":{"start":{"line":221,"column":12},"end":{"line":225,"column":14}},"115":{"start":{"line":222,"column":16},"end":{"line":224,"column":19}},"116":{"start":{"line":223,"column":20},"end":{"line":223,"column":56}},"117":{"start":{"line":226,"column":12},"end":{"line":226,"column":18}},"118":{"start":{"line":229,"column":4},"end":{"line":229,"column":18}}},"branchMap":{"1":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":0},"end":{"line":56,"column":0}},{"start":{"line":56,"column":0},"end":{"line":56,"column":0}}]},"2":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":19}},{"start":{"line":56,"column":23},"end":{"line":56,"column":31}}]},"3":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":0},"end":{"line":70,"column":0}},{"start":{"line":70,"column":0},"end":{"line":70,"column":0}}]},"4":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":20},"end":{"line":75,"column":23}},{"start":{"line":75,"column":27},"end":{"line":75,"column":33}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":16},"end":{"line":97,"column":16}},{"start":{"line":97,"column":16},"end":{"line":97,"column":16}}]},"7":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":20},"end":{"line":110,"column":20}},{"start":{"line":110,"column":20},"end":{"line":110,"column":20}}]},"8":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":12}},{"start":{"line":125,"column":12},"end":{"line":125,"column":12}}]},"9":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":16}},{"start":{"line":137,"column":16},"end":{"line":137,"column":16}}]},"10":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":16}},{"start":{"line":141,"column":16},"end":{"line":141,"column":16}}]},"11":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":50},"end":{"line":152,"column":53}},{"start":{"line":152,"column":56},"end":{"line":152,"column":98}}]},"12":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":12},"end":{"line":180,"column":12}},{"start":{"line":180,"column":12},"end":{"line":180,"column":12}}]},"13":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"14":{"line":199,"type":"switch","locations":[{"start":{"line":200,"column":8},"end":{"line":207,"column":18}},{"start":{"line":209,"column":8},"end":{"line":216,"column":18}},{"start":{"line":218,"column":8},"end":{"line":226,"column":18}}]}},"code":["var path = require('path');","var async = require('async'); // NB: async is used here in the benchmarking code, in case co or","                              // asyncawait won't run on the version of node being benchmarked.","var _ = require('lodash');","try { var memwatch = require('memwatch'); } catch (ex) { }","var rewire = require('rewire');","","","// Functions available for benchmarking.","var functions = {","    countFiles: 'countFiles',","    fibonacci: 'fibonacci',","    largest: 'largest'","","};","","// Variants available for benchmarking.","var variants = {","    async: 'async',","    asyncawait: 'asyncawait',","    asyncx: 'asyncx',","    bluebird: 'bluebird',","    callbacks: 'callbacks',","    co: 'co',","    synchronous: 'synchronous'","};","","","// ================================================================================","// Benchmark configuration - adjust to suit.","","var SELECTED_FUNCTION = functions.largest;","","var SELECTED_VARIANT = variants.asyncawait;","","var SAMPLES_PER_RUN = 100;   // How many times the function will be called per run.","","var RUNS_PER_BENCHMARK = 10;  // How many runs make up the whole benchmark.","","var CONCURRENCY_FACTOR = 10;  // Max number of concurrent invocations of the function.","","// Some additional switches","var JUST_CHECK_THE_FUNCTION = false;            // If true, just call the function once and display its results.","var USE_SAME_SYMBOL_FOR_ALL_SAMPLES = true;     // If true, all samples will use the same symbol ('.'). Otherwise, concurrent samples will use distinct symbols.","var USE_MOCK_FS = false;                         // If true, uses a mocked 'fs' module returning fixed in-memory results.","var OUTPUT_GC_STATS = true;                     // If true, indicate GC pauses and statistics, and indicate possible memory leaks.","var OUTPUT_SAMPLES_PER_SEC_SUMMARY = false;     // If true, print all samples/sec numbers at the end, to export for anaysis (eg for charting).","","// ================================================================================","","","// Set up memory diagnostics","var fullGCs = 0;","var incrGCs = 0;","var leaked = 0;","if (OUTPUT_GC_STATS && memwatch) {","    memwatch.on('leak', function(info) {","        leaked += info.growth;","        process.stdout.write(' [LEAK+' + info.growth +'] ');","    });","    memwatch.on('stats', function(stats) {","        fullGCs = stats.num_full_gc;","        incrGCs = stats.num_inc_gc;","        process.stdout.write(' [GC] ');","    });","}","","","// Run the benchmark (or just check the function).","if (JUST_CHECK_THE_FUNCTION) {","    var name = SELECTED_FUNCTION + '-' + SELECTED_VARIANT;","    var sample = createSampleFunction();","    console.log(\"========== CHECKING '\" + name + \"': ==========\");","    sample(function(err, result) {","        console.log(err || result);","        if (OUTPUT_GC_STATS) {","            console.log(\"========== GCs: \" + fullGCs + 'full/' + incrGCs + \"incr ==========\");","            console.log(\"========== Leaked: \" + leaked + \" ==========\");","        }","    });","} else {","    benchmark();","}","","","function benchmark() {","    var name = SELECTED_FUNCTION + '-' + SELECTED_VARIANT;","    var sample = createSampleFunction();","    var allSamplesPerSec = [];","    console.log('========== PERFORMING ' + RUNS_PER_BENCHMARK + \" RUNS ON '\" + name + \"': ==========\\n\");","    var times = [];","    async.timesSeries(","        RUNS_PER_BENCHMARK,","        function (n, next) {","            process.stdout.write('RUN ' + (n + 1));","            run(sample, function (err, timing) {","                if (err) {","                    next(err);","                } else {","                    times.push(timing.totalElapsed);","                    allSamplesPerSec.push(SAMPLES_PER_RUN * 1000.0 / timing.totalElapsed);","                    var msg = SAMPLES_PER_RUN","                        + ' samples took '","                        + (timing.totalElapsed / 1000.0)","                        + ' seconds ('","                        + (SAMPLES_PER_RUN * 1000.0 / timing.totalElapsed)","                        + ' samples/sec), average latency per sample: '","                        + timing.perSample","                        + 'ms';","                    if (OUTPUT_GC_STATS) {","                        msg = msg","                            + ', GCs: '","                            + timing.fullGCs","                            + 'full/'","                            + timing.incrGCs","                            + 'incr, leaked: '","                            + timing.leaked;","                    }","                    console.log(msg + '\\n');","                    next();","                }","            });","        },","        function (err) {","            if (err) {","                console.log(err);","                process.exit();","            } else {","                totalTime = _.reduce(times, function (sum, time) { return sum + time; });","                var averageTime = totalTime / RUNS_PER_BENCHMARK;","                    var msg = 'Average time: '","                        + (averageTime / 1000.0)","                        + ' seconds ('","                        + (SAMPLES_PER_RUN * 1000.0 / averageTime)","                        + ' samples/sec)';","                console.log('========== ' + msg + ' ==========');","                if (OUTPUT_GC_STATS) {","                    console.log(\"========== GCs: \" + fullGCs + 'full/' + incrGCs + \"incr ==========\");","                    console.log(\"========== Leaked: \" + leaked + \" ==========\");","                }","                if (OUTPUT_SAMPLES_PER_SEC_SUMMARY) {","                    console.log(\"========== Summary of samples/sec for all runs: ==========\");","                    console.log(allSamplesPerSec.join(', '));","                }","            }","        });","}","","","","function run(sample, callback) {","    var chars = USE_SAME_SYMBOL_FOR_ALL_SAMPLES ? '.' : './#$@%^&*+!=-?~`|()[]ABCDEFGHIJKLMNOPQRS';","    var start = new Date().getTime();","    var startFullGCs = fullGCs;","    var startIncrGCs = incrGCs;","    var startLeaked = leaked;","    var sumOfTimePerSample = 0.0;","    async.times(","        CONCURRENCY_FACTOR,","        function (m, nextOuter) {","            var char = chars.charAt(m % chars.length);","            async.timesSeries(","                1.0 * SAMPLES_PER_RUN / CONCURRENCY_FACTOR,","                function (n, nextInner) {","                    process.stdout.write(char);","                    var start = new Date().getTime();","                    sample(function() {","                        var end = new Date().getTime();","                        sumOfTimePerSample += (end - start);","                        nextInner();","                    });","                },","                function (err) {","                    nextOuter(err);","                }","            );","        },","        function(err, res) {","            process.stdout.write('\\n');","            if (err) { callback(err); return; }","            var perSample = sumOfTimePerSample / SAMPLES_PER_RUN;","            var totalElapsed = new Date().getTime() - start;","            callback(null, {","                perSample: perSample,","                totalElapsed: totalElapsed,","                fullGCs: fullGCs - startFullGCs,","                incrGCs: incrGCs - startIncrGCs,","                leaked: leaked - startLeaked","            });","        }","    );","};","","","function createSampleFunction() {","    var moduleId = './' + SELECTED_FUNCTION + '/' + SELECTED_FUNCTION + '-' + SELECTED_VARIANT;","    var selectedFunction = rewire(moduleId);","    if (USE_MOCK_FS) selectedFunction.__set__('fs', require('./mockfs'));","    switch (SELECTED_FUNCTION) {","        case functions.countFiles:","            var dirToCheck = path.join(__dirname, '.');","            var sample = function (callback) {","                selectedFunction(dirToCheck, function (err, result) {","                    setImmediate(callback, err, result);","                });","            };","            break;","","        case functions.fibonacci:","            var n = 5;","            var sample = function (callback) {","                selectedFunction(n, function (err, result) {","                    setImmediate(callback, err, result);","                });","            };","            break;","","        case functions.largest:","            var dirToCheck = path.join(__dirname, '.');","            var options = { recurse: true, preview: true };","            var sample = function (callback) {","                selectedFunction(dirToCheck, options, function (err, result) {","                    setImmediate(callback, err, result);","                });","            };","            break;","","    }","    return sample;","}",""],"l":{"1":2,"2":2,"4":0,"5":0,"6":0,"10":0,"18":0,"32":0,"34":0,"36":0,"38":0,"40":0,"43":0,"44":0,"45":0,"46":0,"47":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"82":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"102":0,"110":0,"111":0,"119":0,"120":0,"125":0,"126":0,"127":0,"129":0,"130":0,"131":0,"136":0,"137":0,"138":0,"139":0,"141":0,"142":0,"143":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"174":0,"179":0,"180":0,"181":0,"182":0,"183":0,"195":1,"196":0,"197":0,"198":0,"199":0,"201":0,"202":0,"203":0,"204":0,"207":0,"210":0,"211":0,"212":0,"213":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"226":0,"229":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/mockfs.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/mockfs.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":34}},"3":{"start":{"line":5,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":31,"column":0},"end":{"line":31,"column":47}},"5":{"start":{"line":32,"column":0},"end":{"line":32,"column":20}}},"branchMap":{},"code":["﻿var mock = require('mock-fs');","var Promise = require('bluebird');","","","var config = {","    'mocks/m1': {","        dir11: {","            file111: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',","            file112: 'bbbbbbbbbbbbbb',","            file113: 'ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc',","            file114: 'dddddddddddddddddddddddddddddddddddddddd',","            file115: 'eeeeeee',","            file116: 'ffffffffffffffffff',","            file117: 'gggggggggggggggggggggggggggggggggggggggggggggggggggg',","            file118: 'hhhhhhhhhhhhhhhhhhhhhhhhhhh',","            file119: 'iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii',","        },","        dir12: {},","        file11: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',","        file12: 'b',","        file13: 'ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc',","    },","    'mocks/m2': {","        file21: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'","    },","    'mocks/m3': {","    }","};","","","var fs = Promise.promisifyAll(mock.fs(config));","module.exports = fs;",""],"l":{"1":2,"2":0,"5":0,"31":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-asyncawait.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-asyncawait.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":28},"end":{"line":10,"column":43}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":29},"end":{"line":14,"column":45}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":36},"end":{"line":15,"column":52}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"7":{"start":{"line":10,"column":0},"end":{"line":19,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":79}},"10":{"start":{"line":14,"column":47},"end":{"line":14,"column":75}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":85}},"12":{"start":{"line":15,"column":54},"end":{"line":15,"column":80}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":77}},"14":{"start":{"line":18,"column":45},"end":{"line":18,"column":66}},"15":{"start":{"line":22,"column":0},"end":{"line":22,"column":28}}},"branchMap":{},"code":["var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var _ = require('lodash');","var async = require('../..').async;","var await = require('../..').await;","","","/** Returns the number of files in the given directory. */","var countFiles = async.cps (function (dir) {","    var files = await (fs.readdirSync(dir));","","    // Get all file stats in parallel.","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = await (_.map(paths, function (path) { return fs.statAsync(path); }));","","    // Count the files.","    return _.filter(stats, function (stat) { return stat.isFile(); }).length;","});","","","module.exports = countFiles;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"10":1,"11":0,"14":0,"15":0,"18":0,"22":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-async.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-async.js","s":{"1":2,"2":2,"3":2,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":42}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":28}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":53}}},"5":{"name":"(anonymous_5)","line":17,"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":56}}},"6":{"name":"(anonymous_6)","line":21,"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":35}}},"7":{"name":"(anonymous_7)","line":22,"loc":{"start":{"line":22,"column":41},"end":{"line":22,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"5":{"start":{"line":8,"column":0},"end":{"line":26,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":25,"column":17}},"7":{"start":{"line":11,"column":12},"end":{"line":11,"column":38}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":87}},"9":{"start":{"line":16,"column":55},"end":{"line":16,"column":83}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":103}},"11":{"start":{"line":17,"column":58},"end":{"line":17,"column":88}},"12":{"start":{"line":22,"column":12},"end":{"line":22,"column":91}},"13":{"start":{"line":22,"column":59},"end":{"line":22,"column":80}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":35}},"15":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"branchMap":{},"code":["var fs = require('fs');","var path = require('path');","var _ = require('lodash');","var async = require('async');","","","/** Returns the number of files in the given directory. */","var countFiles = function (dir, callback) {","    async.waterfall([","        function (callback) {","            fs.readdir(dir, callback);","        },","","        // Get all file stats in parallel.","        function (files, callback) {","            var paths = _.map(files, function (file) { return path.join(dir, file); });","            async.parallel(_.map(paths, function (path) { return fs.stat.bind(fs, path); }), callback);","        },","","        // Count the files.","        function (stats, callback) {","            var result = _.filter(stats, function (stat) { return stat.isFile(); }).length;","            callback(null, result);","        }","    ], callback);","}","","","module.exports = countFiles;",""],"l":{"1":2,"2":2,"3":2,"4":2,"8":0,"9":0,"11":0,"16":0,"17":0,"22":0,"23":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-bluebird.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-bluebird.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":32}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":10},"end":{"line":12,"column":27}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":33},"end":{"line":13,"column":49}}},"4":{"name":"(anonymous_4)","line":14,"loc":{"start":{"line":14,"column":40},"end":{"line":14,"column":56}}},"5":{"name":"(anonymous_5)","line":18,"loc":{"start":{"line":18,"column":10},"end":{"line":18,"column":27}}},"6":{"name":"(anonymous_6)","line":19,"loc":{"start":{"line":19,"column":31},"end":{"line":19,"column":47}}},"7":{"name":"nodeified","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"5":{"start":{"line":8,"column":0},"end":{"line":21,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":20,"column":7}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":83}},"8":{"start":{"line":13,"column":51},"end":{"line":13,"column":79}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":89}},"10":{"start":{"line":14,"column":58},"end":{"line":14,"column":84}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":81}},"12":{"start":{"line":19,"column":49},"end":{"line":19,"column":70}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":72}},"14":{"start":{"line":24,"column":36},"end":{"line":24,"column":70}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}}},"branchMap":{},"code":["var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var _ = require('lodash');","","","/** Returns the number of files in the given directory. */","var countFiles = function (dir) {","    return fs.readdirAsync(dir)","","    // Get all file stats in parallel.","    .then(function (files) {","        var paths = _.map(files, function (file) { return path.join(dir, file); });","        return Promise.all(_.map(paths, function (path) { return fs.statAsync(path); }));","    })","","    // Count the files.","    .then(function (stats) {","        return _.filter(stats, function (stat) { return stat.isFile(); }).length;","    });","}","","","function nodeified(dir, callback) { countFiles(dir).nodeify(callback); }","module.exports = nodeified;",""],"l":{"1":1,"2":1,"3":1,"4":1,"8":1,"9":0,"13":0,"14":0,"19":0,"24":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-callbacks.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-callbacks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":42}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":20},"end":{"line":10,"column":42}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":33},"end":{"line":12,"column":49}}},"4":{"name":"getStatsInParallel","line":13,"loc":{"start":{"line":13,"column":9},"end":{"line":13,"column":47}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":30},"end":{"line":24,"column":49}}},"6":{"name":"(anonymous_6)","line":25,"loc":{"start":{"line":25,"column":34},"end":{"line":25,"column":55}}},"7":{"name":"(anonymous_7)","line":38,"loc":{"start":{"line":38,"column":11},"end":{"line":38,"column":33}}},"8":{"name":"(anonymous_8)","line":42,"loc":{"start":{"line":42,"column":41},"end":{"line":42,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":46,"column":1}},"5":{"start":{"line":10,"column":4},"end":{"line":45,"column":7}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":43}},"7":{"start":{"line":11,"column":19},"end":{"line":11,"column":33}},"8":{"start":{"line":11,"column":34},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":83}},"10":{"start":{"line":12,"column":51},"end":{"line":12,"column":79}},"11":{"start":{"line":13,"column":8},"end":{"line":44,"column":11}},"12":{"start":{"line":14,"column":12},"end":{"line":14,"column":27}},"13":{"start":{"line":15,"column":12},"end":{"line":15,"column":41}},"14":{"start":{"line":16,"column":12},"end":{"line":37,"column":13}},"15":{"start":{"line":19,"column":16},"end":{"line":19,"column":38}},"16":{"start":{"line":20,"column":16},"end":{"line":20,"column":23}},"17":{"start":{"line":24,"column":16},"end":{"line":36,"column":19}},"18":{"start":{"line":25,"column":20},"end":{"line":35,"column":23}},"19":{"start":{"line":26,"column":24},"end":{"line":26,"column":52}},"20":{"start":{"line":26,"column":45},"end":{"line":26,"column":52}},"21":{"start":{"line":27,"column":24},"end":{"line":34,"column":25}},"22":{"start":{"line":28,"column":28},"end":{"line":28,"column":42}},"23":{"start":{"line":29,"column":28},"end":{"line":29,"column":42}},"24":{"start":{"line":31,"column":28},"end":{"line":31,"column":44}},"25":{"start":{"line":32,"column":28},"end":{"line":32,"column":40}},"26":{"start":{"line":33,"column":28},"end":{"line":33,"column":71}},"27":{"start":{"line":33,"column":49},"end":{"line":33,"column":71}},"28":{"start":{"line":41,"column":12},"end":{"line":41,"column":47}},"29":{"start":{"line":41,"column":23},"end":{"line":41,"column":37}},"30":{"start":{"line":41,"column":38},"end":{"line":41,"column":45}},"31":{"start":{"line":42,"column":12},"end":{"line":42,"column":91}},"32":{"start":{"line":42,"column":59},"end":{"line":42,"column":80}},"33":{"start":{"line":43,"column":12},"end":{"line":43,"column":35}},"34":{"start":{"line":49,"column":0},"end":{"line":49,"column":28}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":24},"end":{"line":26,"column":24}},{"start":{"line":26,"column":24},"end":{"line":26,"column":24}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":24},"end":{"line":27,"column":24}},{"start":{"line":27,"column":24},"end":{"line":27,"column":24}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":28},"end":{"line":33,"column":28}},{"start":{"line":33,"column":28},"end":{"line":33,"column":28}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":12}},{"start":{"line":41,"column":12},"end":{"line":41,"column":12}}]}},"code":["var fs = require('fs');","var path = require('path');","var _ = require('lodash');","","","/** Returns the number of files in the given directory. */","var countFiles = function (dir, callback) {","","    // Get all directory entries.","    fs.readdir(dir, function (err, files) {","        if (err) { callback(err); return; }","        var paths = _.map(files, function (file) { return path.join(dir, file); });","        (function getStatsInParallel(callback) {","            var stats = [];","            var remaining = paths.length;","            if (remaining === 0) {","","                // Directory is empty.","                callback(null, stats);","                return;","            } else {","","                // Get all file stats in parallel.","                paths.forEach(function (path, i) {","                    fs.stat(path, function (err, stat) {","                        if (remaining === 0) return;","                        if (err) {","                            remaining = 0;","                            callback(err);","                        } else {","                            stats[i] = stat;","                            --remaining;","                            if (remaining === 0) callback(null, stats);","                        }","                    });","                });","            }","        })(function (err, stats) {","","            // Count the files.","            if (err) { callback(err); return; }","            var result = _.filter(stats, function (stat) { return stat.isFile(); }).length;","            callback(null, result);","        });","    });","}","","","module.exports = countFiles;",""],"l":{"1":1,"2":1,"3":1,"7":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"19":0,"20":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"41":0,"42":0,"43":0,"49":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-co.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-co.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":20},"end":{"line":9,"column":36}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":29},"end":{"line":13,"column":45}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":35},"end":{"line":14,"column":51}}},"4":{"name":"(anonymous_4)","line":17,"loc":{"start":{"line":17,"column":27},"end":{"line":17,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":23}},"6":{"start":{"line":9,"column":0},"end":{"line":18,"column":3}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":42}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":79}},"9":{"start":{"line":13,"column":47},"end":{"line":13,"column":75}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":83}},"11":{"start":{"line":14,"column":53},"end":{"line":14,"column":79}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":77}},"13":{"start":{"line":17,"column":45},"end":{"line":17,"column":66}},"14":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}}},"branchMap":{},"code":["var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var _ = require('lodash');","var co = require('co');","","","/** Returns the number of files in the given directory. */","var countFiles = co(function* (dir) {","    var files = yield fs.readdirSync(dir);","","    // Get all file stats in parallel.","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = yield _.map(paths, function (path) { return fs.statAsync(path); });","","    // Count the files.","    return _.filter(stats, function (stat) { return stat.isFile(); }).length;","});","","","module.exports = countFiles;",""],"l":{"1":2,"2":2,"3":2,"4":2,"5":2,"9":0,"10":0,"13":0,"14":0,"17":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-synchronous.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/countFiles/countFiles-synchronous.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":32}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":29},"end":{"line":11,"column":45}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":29},"end":{"line":12,"column":45}}},"4":{"name":"(anonymous_4)","line":15,"loc":{"start":{"line":15,"column":27},"end":{"line":15,"column":43}}},"5":{"name":"nodeified","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":7,"column":0},"end":{"line":16,"column":2}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":79}},"7":{"start":{"line":11,"column":47},"end":{"line":11,"column":75}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":76}},"9":{"start":{"line":12,"column":47},"end":{"line":12,"column":72}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":77}},"11":{"start":{"line":15,"column":45},"end":{"line":15,"column":66}},"12":{"start":{"line":19,"column":0},"end":{"line":26,"column":1}},"13":{"start":{"line":20,"column":4},"end":{"line":25,"column":5}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":40}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":22}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}}},"branchMap":{},"code":["var fs = require('fs');","var path = require('path');","var _ = require('lodash');","","","/** Returns the number of files in the given directory. */","var countFiles = function (dir) {","    var files = fs.readdirSync(dir);","","    // Get all file stats in parallel.","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = _.map(paths, function (path) { return fs.statSync(path); });","","    // Count the files.","    return _.filter(stats, function (stat) { return stat.isFile(); }).length;","};","","","function nodeified(dir, callback) {","    try {","        callback(null, countFiles(dir));","    }","    catch (err) {","        callback(err);","    }","}","module.exports = nodeified;",""],"l":{"1":1,"2":1,"3":1,"7":1,"8":0,"11":0,"12":0,"15":0,"19":1,"20":0,"21":0,"24":0,"27":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-asyncawait.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-asyncawait.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"self","line":7,"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":3}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":25}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":25}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":57}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":37}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":27}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]}},"code":["var async = require('../..').async;","var await = require('../..').await;","","","// WARNING: BAD CODE!! THIS IMPL IS HUGELY INEFFICIENT. It's purpose is purely","// to exercise recursive behaviour for testing and evaluation purposes.","var fibonacci = async.cps (function self(n) {","    if (n <= 1) return 1;","    var operands = await.in ([self(n - 1), self(n - 2)]);","    return operands[0] + operands[1];","});","","","module.exports = fibonacci;",""],"l":{"1":1,"2":1,"7":1,"8":0,"9":0,"10":0,"14":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-async.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-async.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":39}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":12},"end":{"line":11,"column":32}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":12},"end":{"line":14,"column":32}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":8},"end":{"line":18,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":7,"column":4},"end":{"line":22,"column":5}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":26}},"5":{"start":{"line":10,"column":8},"end":{"line":21,"column":11}},"6":{"start":{"line":12,"column":16},"end":{"line":12,"column":43}},"7":{"start":{"line":15,"column":16},"end":{"line":15,"column":43}},"8":{"start":{"line":19,"column":12},"end":{"line":19,"column":42}},"9":{"start":{"line":19,"column":21},"end":{"line":19,"column":42}},"10":{"start":{"line":20,"column":12},"end":{"line":20,"column":54}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":27}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":12}},{"start":{"line":19,"column":12},"end":{"line":19,"column":12}}]}},"code":["var async = require('async');","","","// WARNING: BAD CODE!! THIS IMPL IS HUGELY INEFFICIENT. It's purpose is purely","// to exercise recursive behaviour for testing and evaluation purposes.","var fibonacci = function (n, callback) {","    if (n <= 1) {","        callback(null, 1);","    } else {","        async.parallel([","            function (callback) {","                fibonacci(n - 1, callback);","            },","            function (callback) {","                fibonacci(n - 2, callback);","            }","        ],","        function (err, operands) {","            if (err) return callback(err);","            callback(null, operands[0] + operands[1]);","        });","    }","}","","","module.exports = fibonacci;",""],"l":{"1":2,"6":0,"7":0,"8":0,"10":0,"12":0,"15":0,"19":0,"20":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-bluebird.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-bluebird.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":29}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":16},"end":{"line":14,"column":36}}},"3":{"name":"nodeified","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":18,"column":1}},"3":{"start":{"line":7,"column":4},"end":{"line":17,"column":5}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":34}},"5":{"start":{"line":10,"column":8},"end":{"line":16,"column":11}},"6":{"start":{"line":15,"column":12},"end":{"line":15,"column":46}},"7":{"start":{"line":21,"column":0},"end":{"line":21,"column":67}},"8":{"start":{"line":21,"column":34},"end":{"line":21,"column":65}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":7,"column":4}},{"start":{"line":7,"column":4},"end":{"line":7,"column":4}}]}},"code":["﻿var Promise = require('bluebird');","","","// WARNING: BAD CODE!! THIS IMPL IS HUGELY INEFFICIENT. It's purpose is purely","// to exercise recursive behaviour for testing and evaluation purposes.","var fibonacci = function (n) {","    if (n <= 1) {","        return Promise.resolve(1);","    } else {","        return Promise.all([","            fibonacci(n - 1),","            fibonacci(n - 2)","        ])","        .spread(function (lhs, rhs) {","            return Promise.resolve(lhs + rhs);","        });","    }","}","","","function nodeified(n, callback) { fibonacci(n).nodeify(callback); }","module.exports = nodeified;",""],"l":{"1":1,"6":1,"7":0,"8":0,"10":0,"15":0,"21":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-callbacks.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-callbacks.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":39}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":43}}},"3":{"name":"(anonymous_3)","line":15,"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":43}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":21,"column":1}},"2":{"start":{"line":6,"column":4},"end":{"line":20,"column":5}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":26}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":21}},"5":{"start":{"line":10,"column":8},"end":{"line":14,"column":11}},"6":{"start":{"line":11,"column":12},"end":{"line":11,"column":42}},"7":{"start":{"line":11,"column":21},"end":{"line":11,"column":42}},"8":{"start":{"line":12,"column":12},"end":{"line":12,"column":20}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":47}},"10":{"start":{"line":13,"column":21},"end":{"line":13,"column":47}},"11":{"start":{"line":15,"column":8},"end":{"line":19,"column":11}},"12":{"start":{"line":16,"column":12},"end":{"line":16,"column":42}},"13":{"start":{"line":16,"column":21},"end":{"line":16,"column":42}},"14":{"start":{"line":17,"column":12},"end":{"line":17,"column":20}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":47}},"16":{"start":{"line":18,"column":21},"end":{"line":18,"column":47}},"17":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":12}},{"start":{"line":11,"column":12},"end":{"line":11,"column":12}}]},"3":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":13,"column":12}},{"start":{"line":13,"column":12},"end":{"line":13,"column":12}}]},"4":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"5":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":12}},{"start":{"line":18,"column":12},"end":{"line":18,"column":12}}]}},"code":["","","// WARNING: BAD CODE!! THIS IMPL IS HUGELY INEFFICIENT. It's purpose is purely","// to exercise recursive behaviour for testing and evaluation purposes.","var fibonacci = function (n, callback) {","    if (n <= 1) {","        callback(null, 1);","    } else {","        var lhs, rhs;","        fibonacci(n - 1, function (err, l) {","            if (err) return callback(err);","            lhs = l;","            if (rhs) callback(null, lhs + rhs);","        });","        fibonacci(n - 2, function (err, r) {","            if (err) return callback(err);","            rhs = r;","            if (lhs) callback(null, lhs + rhs);","        });","    }","}","","","module.exports = fibonacci;",""],"l":{"5":1,"6":0,"7":0,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"18":0,"24":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-co.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-co.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":33}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":3}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":25}},"4":{"start":{"line":10,"column":16},"end":{"line":10,"column":25}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":62}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":37}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]}},"code":["// TODO: BUG: this co implementation does not recurse properly - cause yet to be determined","","","var co = require('co');","","","// WARNING: BAD CODE!! THIS IMPL IS HUGELY INEFFICIENT. It's purpose is purely","// to exercise recursive behaviour for testing and evaluation purposes.","var fibonacci = co(function* (n) {","    if (n <= 1) return 1;","    var operands = yield [fibonacci(n - 1), fibonacci(n - 2)];","    return operands[0] + operands[1];","});","","","module.exports = fibonacci;",""],"l":{"4":2,"9":0,"10":0,"11":0,"12":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-synchronous.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/fibonacci/fibonacci-synchronous.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":29}}},"2":{"name":"nodeified","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":6,"column":4},"end":{"line":6,"column":25}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":47}},"5":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"6":{"start":{"line":12,"column":4},"end":{"line":17,"column":5}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":37}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":22}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":27}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]}},"code":["","","// WARNING: BAD CODE!! THIS IMPL IS HUGELY INEFFICIENT. It's purpose is purely","// to exercise recursive behaviour for testing and evaluation purposes.","var fibonacci = function (n) {","    if (n <= 1) return 1;","    return fibonacci(n - 1) + fibonacci(n - 2);","};","","","function nodeified(n, callback) {","    try {","        callback(null, fibonacci(n));","    }","    catch (err) {","        callback(err);","    }","}","module.exports = nodeified;",""],"l":{"5":1,"6":0,"7":0,"11":1,"12":0,"13":0,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-asyncawait-iterators.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-asyncawait-iterators.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":25},"end":{"line":18,"column":59}}},"2":{"name":"self","line":24,"loc":{"start":{"line":24,"column":42},"end":{"line":24,"column":69}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":33},"end":{"line":26,"column":49}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":43},"end":{"line":27,"column":59}}},"5":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":22},"end":{"line":28,"column":40}}},"6":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":32},"end":{"line":37,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":54,"column":3}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":41}},"10":{"start":{"line":24,"column":4},"end":{"line":32,"column":7}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":48}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":83}},"13":{"start":{"line":26,"column":51},"end":{"line":26,"column":79}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":92}},"15":{"start":{"line":27,"column":61},"end":{"line":27,"column":87}},"16":{"start":{"line":28,"column":8},"end":{"line":31,"column":11}},"17":{"start":{"line":29,"column":12},"end":{"line":29,"column":61}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":78}},"19":{"start":{"line":30,"column":55},"end":{"line":30,"column":78}},"20":{"start":{"line":35,"column":4},"end":{"line":35,"column":27}},"21":{"start":{"line":36,"column":4},"end":{"line":36,"column":44}},"22":{"start":{"line":37,"column":4},"end":{"line":42,"column":8}},"23":{"start":{"line":38,"column":8},"end":{"line":41,"column":9}},"24":{"start":{"line":39,"column":12},"end":{"line":39,"column":70}},"25":{"start":{"line":39,"column":58},"end":{"line":39,"column":70}},"26":{"start":{"line":40,"column":12},"end":{"line":40,"column":23}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":93}},"28":{"start":{"line":46,"column":4},"end":{"line":52,"column":5}},"29":{"start":{"line":47,"column":8},"end":{"line":47,"column":56}},"30":{"start":{"line":48,"column":8},"end":{"line":48,"column":36}},"31":{"start":{"line":49,"column":8},"end":{"line":49,"column":67}},"32":{"start":{"line":50,"column":8},"end":{"line":50,"column":64}},"33":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"34":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"35":{"start":{"line":55,"column":0},"end":{"line":55,"column":21}},"36":{"start":{"line":58,"column":0},"end":{"line":58,"column":25}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":14},"end":{"line":21,"column":21}},{"start":{"line":21,"column":25},"end":{"line":21,"column":40}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":31}},{"start":{"line":30,"column":35},"end":{"line":30,"column":53}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"5":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"6":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":16},"end":{"line":39,"column":21}},{"start":{"line":39,"column":25},"end":{"line":39,"column":56}}]},"7":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":24},"end":{"line":43,"column":85}},{"start":{"line":43,"column":88},"end":{"line":43,"column":92}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"9":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":14}},{"start":{"line":46,"column":18},"end":{"line":46,"column":33}},{"start":{"line":46,"column":37},"end":{"line":46,"column":46}}]}},"code":["﻿var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","var async = require('../..').async;","var await = require('../..').await;","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * This is an alternative implementation, using an asynchronous iterator.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }","  */","var largest = async.cps (function (dir, options, internal) {","","    // Parse arguments.","    options = options || largest.options;","","    // Create an iterable to return all files and subfolders (recursively) in dir.","    var descendentFiles = async.iterable (function self(yield_, dir) {","        var files = await (fs.readdirSync(dir));","        var paths = _.map(files, function (file) { return path.join(dir, file); });","        var stats = await.in (_.map(paths, function (path) { return fs.statAsync(path); }));","        _.each(stats, function(stat, i) {","            yield_ ({ in: dir, path: paths[i], stat: stat });","            if (options.recurse && stat.isDirectory()) self(yield_, paths[i]);","        });","    });","","    // Enumerate all files and subfolders in 'dir' and choose the largest file.","    var best, searched = 0;","    var fileIterator = descendentFiles(dir);","    await (fileIterator.forEach(function (file) {","        if (file.stat.isFile()) {","            if (!best || file.stat.size > best.stat.size) best = file;","            ++searched;","        }","    }));","    var result = best ? { path: best.path, size: best.stat.size, searched: searched } : null;","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    if (result && options.preview && !internal) {","        var fd = await (fs.openAsync(result.path, 'r'));","        var buffer = new Buffer(40);","        var bytesRead = await (fs.readAsync(fd, buffer, 0, 40, 0));","        result.preview = buffer.toString('utf-8', 0, bytesRead);","        await (fs.closeSync(fd));","    }","    return result;","});","largest.options = {};","","","module.exports = largest;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"18":1,"21":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"43":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"55":1,"58":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-asyncawait.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-asyncawait.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"self","line":17,"loc":{"start":{"line":17,"column":25},"end":{"line":17,"column":63}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":29},"end":{"line":24,"column":45}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":36},"end":{"line":25,"column":52}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":41},"end":{"line":28,"column":60}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"8":{"start":{"line":17,"column":0},"end":{"line":51,"column":3}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":41}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":45}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":79}},"12":{"start":{"line":24,"column":47},"end":{"line":24,"column":75}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":85}},"14":{"start":{"line":25,"column":54},"end":{"line":25,"column":80}},"15":{"start":{"line":28,"column":4},"end":{"line":31,"column":8}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":83}},"17":{"start":{"line":29,"column":27},"end":{"line":29,"column":83}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":70}},"19":{"start":{"line":34,"column":4},"end":{"line":40,"column":11}},"20":{"start":{"line":37,"column":12},"end":{"line":37,"column":81}},"21":{"start":{"line":37,"column":39},"end":{"line":37,"column":81}},"22":{"start":{"line":38,"column":12},"end":{"line":38,"column":43}},"23":{"start":{"line":39,"column":12},"end":{"line":39,"column":24}},"24":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":56}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":36}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":67}},"28":{"start":{"line":47,"column":8},"end":{"line":47,"column":49}},"29":{"start":{"line":48,"column":8},"end":{"line":48,"column":34}},"30":{"start":{"line":50,"column":4},"end":{"line":50,"column":18}},"31":{"start":{"line":52,"column":0},"end":{"line":52,"column":21}},"32":{"start":{"line":55,"column":0},"end":{"line":55,"column":25}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":14},"end":{"line":20,"column":21}},{"start":{"line":20,"column":25},"end":{"line":20,"column":40}}]},"2":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"3":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":33},"end":{"line":30,"column":62}},{"start":{"line":30,"column":65},"end":{"line":30,"column":69}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":37,"column":12}},{"start":{"line":37,"column":12},"end":{"line":37,"column":12}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":14}},{"start":{"line":43,"column":18},"end":{"line":43,"column":33}},{"start":{"line":43,"column":37},"end":{"line":43,"column":46}}]}},"code":["var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","var async = require('../..').async;","var await = require('../..').await;","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }.","  */","var largest = async.cps (function self(dir, options, internal) {","","    // Parse arguments.","    options = options || largest.options;","","    // Enumerate all files and subfolders in 'dir' to get their stats.","    var files = await (fs.readdirAsync(dir));","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = await (_.map(paths, function (path) { return fs.statAsync(path); }));","","    // Build up a list of possible candidates, recursing into subfolders if requested.","    var candidates = await (_.map(stats, function (stat, i) {","        if (stat.isFile()) return { path: paths[i], size: stat.size, searched: 1 };","        return options.recurse ? self(paths[i], options, true) : null;","    }));","","    // Choose the best candidate.","    var result = _(candidates)","        .compact()","        .reduce(function (best, cand) {","            if (cand.size > best.size) var temp = cand, cand = best, best = temp;","            best.searched += cand.searched;","            return best;","        });","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    if (result && options.preview && !internal) {","        var fd = await (fs.openAsync(result.path, 'r'));","        var buffer = new Buffer(40);","        var bytesRead = await (fs.readAsync(fd, buffer, 0, 40, 0));","        result.preview = buffer.toString('utf8');","        await (fs.closeAsync(fd));","    }","    return result;","});","largest.options = {};","","","module.exports = largest;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"17":1,"20":0,"23":0,"24":0,"25":0,"28":0,"29":0,"30":0,"34":0,"37":0,"38":0,"39":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"52":1,"55":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-async.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-async.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":58}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":8},"end":{"line":22,"column":28}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":35}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":37},"end":{"line":30,"column":53}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":29},"end":{"line":32,"column":45}}},"6":{"name":"(anonymous_6)","line":33,"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":38}}},"7":{"name":"(anonymous_7)","line":36,"loc":{"start":{"line":36,"column":8},"end":{"line":36,"column":42}}},"8":{"name":"(anonymous_8)","line":40,"loc":{"start":{"line":40,"column":29},"end":{"line":40,"column":48}}},"9":{"name":"(anonymous_9)","line":41,"loc":{"start":{"line":41,"column":28},"end":{"line":41,"column":63}}},"10":{"name":"(anonymous_10)","line":47,"loc":{"start":{"line":47,"column":57},"end":{"line":47,"column":78}}},"11":{"name":"(anonymous_11)","line":57,"loc":{"start":{"line":57,"column":8},"end":{"line":57,"column":40}}},"12":{"name":"(anonymous_12)","line":62,"loc":{"start":{"line":62,"column":24},"end":{"line":62,"column":46}}},"13":{"name":"(anonymous_13)","line":69,"loc":{"start":{"line":69,"column":8},"end":{"line":69,"column":36}}},"14":{"name":"(anonymous_14)","line":75,"loc":{"start":{"line":75,"column":20},"end":{"line":75,"column":39}}},"15":{"name":"(anonymous_15)","line":78,"loc":{"start":{"line":78,"column":20},"end":{"line":78,"column":43}}},"16":{"name":"(anonymous_16)","line":83,"loc":{"start":{"line":83,"column":20},"end":{"line":83,"column":58}}},"17":{"name":"(anonymous_17)","line":87,"loc":{"start":{"line":87,"column":20},"end":{"line":87,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":29}},"6":{"start":{"line":15,"column":0},"end":{"line":96,"column":2}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":41}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":68}},"9":{"start":{"line":19,"column":31},"end":{"line":19,"column":68}},"10":{"start":{"line":21,"column":4},"end":{"line":95,"column":17}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":38}},"12":{"start":{"line":30,"column":12},"end":{"line":30,"column":87}},"13":{"start":{"line":30,"column":55},"end":{"line":30,"column":83}},"14":{"start":{"line":31,"column":12},"end":{"line":34,"column":14}},"15":{"start":{"line":32,"column":47},"end":{"line":32,"column":77}},"16":{"start":{"line":33,"column":40},"end":{"line":33,"column":68}},"17":{"start":{"line":39,"column":12},"end":{"line":55,"column":14}},"18":{"start":{"line":41,"column":20},"end":{"line":52,"column":53}},"19":{"start":{"line":42,"column":24},"end":{"line":51,"column":25}},"20":{"start":{"line":43,"column":28},"end":{"line":43,"column":89}},"21":{"start":{"line":44,"column":31},"end":{"line":51,"column":25}},"22":{"start":{"line":45,"column":28},"end":{"line":45,"column":39}},"23":{"start":{"line":47,"column":28},"end":{"line":50,"column":31}},"24":{"start":{"line":48,"column":32},"end":{"line":48,"column":67}},"25":{"start":{"line":48,"column":43},"end":{"line":48,"column":57}},"26":{"start":{"line":48,"column":58},"end":{"line":48,"column":65}},"27":{"start":{"line":49,"column":32},"end":{"line":49,"column":53}},"28":{"start":{"line":60,"column":12},"end":{"line":66,"column":19}},"29":{"start":{"line":63,"column":20},"end":{"line":63,"column":89}},"30":{"start":{"line":63,"column":47},"end":{"line":63,"column":89}},"31":{"start":{"line":64,"column":20},"end":{"line":64,"column":51}},"32":{"start":{"line":65,"column":20},"end":{"line":65,"column":32}},"33":{"start":{"line":67,"column":12},"end":{"line":67,"column":35}},"34":{"start":{"line":72,"column":12},"end":{"line":93,"column":13}},"35":{"start":{"line":73,"column":16},"end":{"line":73,"column":24}},"36":{"start":{"line":74,"column":16},"end":{"line":90,"column":29}},"37":{"start":{"line":76,"column":24},"end":{"line":76,"column":60}},"38":{"start":{"line":79,"column":24},"end":{"line":79,"column":33}},"39":{"start":{"line":80,"column":24},"end":{"line":80,"column":52}},"40":{"start":{"line":81,"column":24},"end":{"line":81,"column":64}},"41":{"start":{"line":84,"column":24},"end":{"line":84,"column":80}},"42":{"start":{"line":85,"column":24},"end":{"line":85,"column":48}},"43":{"start":{"line":88,"column":24},"end":{"line":88,"column":51}},"44":{"start":{"line":92,"column":16},"end":{"line":92,"column":39}},"45":{"start":{"line":97,"column":0},"end":{"line":97,"column":21}},"46":{"start":{"line":100,"column":0},"end":{"line":100,"column":25}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":14},"end":{"line":18,"column":21}},{"start":{"line":18,"column":25},"end":{"line":18,"column":40}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":24},"end":{"line":42,"column":24}},{"start":{"line":42,"column":24},"end":{"line":42,"column":24}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":31},"end":{"line":44,"column":31}},{"start":{"line":44,"column":31},"end":{"line":44,"column":31}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":32},"end":{"line":48,"column":32}},{"start":{"line":48,"column":32},"end":{"line":48,"column":32}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":20}},{"start":{"line":63,"column":20},"end":{"line":63,"column":20}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":72,"column":12}},{"start":{"line":72,"column":12},"end":{"line":72,"column":12}}]},"8":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":16},"end":{"line":72,"column":22}},{"start":{"line":72,"column":26},"end":{"line":72,"column":41}},{"start":{"line":72,"column":45},"end":{"line":72,"column":54}}]},"9":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":25},"end":{"line":88,"column":28}},{"start":{"line":88,"column":32},"end":{"line":88,"column":35}}]}},"code":["var fs = require('fs');","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","var async = require('async');","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }","  */","var largest = function (dir, options, internal, callback) {","","    // Parse arguments.","    options = options || largest.options;","    if (arguments.length == 3) callback = internal, internal = null;","","    async.waterfall([","        function (callback) {","","            // Get all directory entries.","            fs.readdir(dir, callback);","        },","        function (files, callback) {","","            // Get all file stats in parallel.","            var paths = _.map(files, function (file) { return path.join(dir, file); });","            async.parallel(","                _.map(paths, function (path) { return fs.stat.bind(fs, path); }),","                function (err, stats) { callback(err, paths, stats); }","            );","        },","        function (paths, stats, callback) {","","            // Build up a list of possible candidates, recursing into subfolders if requested.","            async.parallel(","                _.map(stats, function (stat, i) {","                    return (function (path, stat, i, callback) {","                        if (stat.isFile()) {","                            callback(null, { path: path, size: stat.size, searched: 1 });","                        } else if (!options.recurse) {","                            callback();","                        } else {","                            largest(path, options, true, function (err, cand) { // recurse","                                if (err) { callback(err); return; }","                                callback(null, cand);","                            });","                        }","                    }).bind(null, paths[i], stat, i);","                }),","                callback","            );","        },","        function (candidates, callback) {","","            // Choose the best candidate.","            var result = _(candidates)","                .compact()","                .reduce(function (best, cand) {","                    if (cand.size > best.size) var temp = cand, cand = best, best = temp;","                    best.searched += cand.searched;","                    return best;","                });","            callback(null, result);","        },","        function (result, callback) {","","            // Add a preview if requested (but skip if this is an internal step in a recursive search).","            if (result && options.preview && !internal) {","                var fd_;","                async.waterfall([","                    function(callback) {","                        fs.open(result.path, 'r', callback);","                    },","                    function(fd, callback) {","                        fd_ = fd;","                        var buffer = new Buffer(40);","                        fs.read(fd, buffer, 0, 40, 0, callback);","                    },","                    function(bytesRead, buffer, callback) {","                        result.preview = buffer.toString('utf-8', 0, bytesRead);","                        fs.close(fd_, callback);","                    },","                    function(cb1, cb2) {","                        (cb1 || cb2)(null, result); // bug workaround: mock-fs passes an extra arg to fs.close's callback, but it shouldn't","                    }","                ], callback);","            } else {","                callback(null, result); // Return without adding preview.","            }","        }","    ], callback);","};","largest.options = {};","","","module.exports = largest;",""],"l":{"1":2,"2":2,"3":2,"4":2,"5":2,"15":0,"18":0,"19":0,"21":0,"25":0,"30":0,"31":0,"32":0,"33":0,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"60":0,"63":0,"64":0,"65":0,"67":0,"72":0,"73":0,"74":0,"76":0,"79":0,"80":0,"81":0,"84":0,"85":0,"88":0,"92":0,"97":0,"100":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-asyncx.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-asyncx.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"self","line":19,"loc":{"start":{"line":19,"column":25},"end":{"line":19,"column":63}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":29},"end":{"line":26,"column":45}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":52}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":45},"end":{"line":30,"column":64}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":16},"end":{"line":38,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"10":{"start":{"line":19,"column":0},"end":{"line":53,"column":3}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":41}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":45}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":79}},"14":{"start":{"line":26,"column":47},"end":{"line":26,"column":75}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":85}},"16":{"start":{"line":27,"column":54},"end":{"line":27,"column":80}},"17":{"start":{"line":30,"column":4},"end":{"line":33,"column":8}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":83}},"19":{"start":{"line":31,"column":27},"end":{"line":31,"column":83}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":70}},"21":{"start":{"line":36,"column":4},"end":{"line":42,"column":11}},"22":{"start":{"line":39,"column":12},"end":{"line":39,"column":81}},"23":{"start":{"line":39,"column":39},"end":{"line":39,"column":81}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":43}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":24}},"26":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":56}},"28":{"start":{"line":47,"column":8},"end":{"line":47,"column":36}},"29":{"start":{"line":48,"column":8},"end":{"line":48,"column":76}},"30":{"start":{"line":49,"column":8},"end":{"line":49,"column":64}},"31":{"start":{"line":50,"column":8},"end":{"line":50,"column":34}},"32":{"start":{"line":52,"column":4},"end":{"line":52,"column":18}},"33":{"start":{"line":54,"column":0},"end":{"line":54,"column":21}},"34":{"start":{"line":57,"column":0},"end":{"line":57,"column":25}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":14},"end":{"line":22,"column":21}},{"start":{"line":22,"column":25},"end":{"line":22,"column":40}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":33},"end":{"line":32,"column":62}},{"start":{"line":32,"column":65},"end":{"line":32,"column":69}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":14}},{"start":{"line":45,"column":18},"end":{"line":45,"column":33}},{"start":{"line":45,"column":37},"end":{"line":45,"column":46}}]}},"code":["var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","var asyncx = require('asyncx');","var async = asyncx.async;","var await = asyncx.await;","asyncx.config('Fiber', require('fibers'));","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }.","  */","var largest = async.cps (function self(dir, options, internal) {","","    // Parse arguments.","    options = options || largest.options;","","    // Enumerate all files and subfolders in 'dir' to get their stats.","    var files = await (fs.readdirAsync(dir));","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = await (_.map(paths, function (path) { return fs.statAsync(path); }));","","    // Build up a list of possible candidates, recursing into subfolders if requested.","    var candidates = /*await*/ (_.map(stats, function (stat, i) {","        if (stat.isFile()) return { path: paths[i], size: stat.size, searched: 1 };","        return options.recurse ? self(paths[i], options, true) : null;","    }));","","    // Choose the best candidate.","    var result = _(candidates)","        .compact()","        .reduce(function (best, cand) {","            if (cand.size > best.size) var temp = cand, cand = best, best = temp;","            best.searched += cand.searched;","            return best;","        });","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    if (result && options.preview && !internal) {","        var fd = await (fs.openAsync(result.path, 'r'));","        var buffer = new Buffer(40);","        var bytesReadAndBuffer = await (fs.readAsync(fd, buffer, 0, 40, 0));","        result.preview = bytesReadAndBuffer[1].toString('utf8');","        await (fs.closeAsync(fd));","    }","    return result;","});","largest.options = {};","","","module.exports = largest;",""],"l":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":0,"8":0,"9":0,"19":0,"22":0,"25":0,"26":0,"27":0,"30":0,"31":0,"32":0,"36":0,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-bluebird.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-bluebird.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":0,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":48}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":28}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":49}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":40},"end":{"line":24,"column":56}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":14},"end":{"line":25,"column":31}}},"6":{"name":"(anonymous_6)","line":29,"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":36}}},"7":{"name":"(anonymous_7)","line":31,"loc":{"start":{"line":31,"column":25},"end":{"line":31,"column":44}}},"8":{"name":"(anonymous_8)","line":39,"loc":{"start":{"line":39,"column":10},"end":{"line":39,"column":32}}},"9":{"name":"(anonymous_9)","line":42,"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":38}}},"10":{"name":"(anonymous_10)","line":50,"loc":{"start":{"line":50,"column":10},"end":{"line":50,"column":28}}},"11":{"name":"(anonymous_11)","line":54,"loc":{"start":{"line":54,"column":18},"end":{"line":54,"column":32}}},"12":{"name":"(anonymous_12)","line":59,"loc":{"start":{"line":59,"column":20},"end":{"line":59,"column":49}}},"13":{"name":"(anonymous_13)","line":63,"loc":{"start":{"line":63,"column":18},"end":{"line":63,"column":30}}},"14":{"name":"nodeified","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":15,"column":0},"end":{"line":70,"column":2}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":41}},"8":{"start":{"line":21,"column":4},"end":{"line":69,"column":7}},"9":{"start":{"line":23,"column":8},"end":{"line":23,"column":83}},"10":{"start":{"line":23,"column":51},"end":{"line":23,"column":79}},"11":{"start":{"line":24,"column":8},"end":{"line":25,"column":59}},"12":{"start":{"line":24,"column":58},"end":{"line":24,"column":84}},"13":{"start":{"line":25,"column":33},"end":{"line":25,"column":55}},"14":{"start":{"line":30,"column":8},"end":{"line":35,"column":10}},"15":{"start":{"line":32,"column":16},"end":{"line":32,"column":108}},"16":{"start":{"line":32,"column":35},"end":{"line":32,"column":108}},"17":{"start":{"line":33,"column":16},"end":{"line":33,"column":98}},"18":{"start":{"line":40,"column":8},"end":{"line":46,"column":11}},"19":{"start":{"line":43,"column":12},"end":{"line":43,"column":81}},"20":{"start":{"line":43,"column":39},"end":{"line":43,"column":81}},"21":{"start":{"line":44,"column":12},"end":{"line":44,"column":43}},"22":{"start":{"line":45,"column":12},"end":{"line":45,"column":24}},"23":{"start":{"line":51,"column":8},"end":{"line":68,"column":9}},"24":{"start":{"line":52,"column":12},"end":{"line":52,"column":20}},"25":{"start":{"line":53,"column":12},"end":{"line":65,"column":15}},"26":{"start":{"line":55,"column":16},"end":{"line":55,"column":25}},"27":{"start":{"line":56,"column":16},"end":{"line":56,"column":44}},"28":{"start":{"line":57,"column":16},"end":{"line":57,"column":58}},"29":{"start":{"line":60,"column":16},"end":{"line":60,"column":72}},"30":{"start":{"line":61,"column":16},"end":{"line":61,"column":42}},"31":{"start":{"line":64,"column":16},"end":{"line":64,"column":30}},"32":{"start":{"line":67,"column":12},"end":{"line":67,"column":26}},"33":{"start":{"line":71,"column":0},"end":{"line":71,"column":21}},"34":{"start":{"line":74,"column":0},"end":{"line":77,"column":1}},"35":{"start":{"line":75,"column":4},"end":{"line":75,"column":66}},"36":{"start":{"line":75,"column":31},"end":{"line":75,"column":66}},"37":{"start":{"line":76,"column":4},"end":{"line":76,"column":44}},"38":{"start":{"line":78,"column":0},"end":{"line":78,"column":27}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":14},"end":{"line":18,"column":21}},{"start":{"line":18,"column":25},"end":{"line":18,"column":40}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":41},"end":{"line":33,"column":73}},{"start":{"line":33,"column":76},"end":{"line":33,"column":97}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":12}},{"start":{"line":43,"column":12},"end":{"line":43,"column":12}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"6":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":18}},{"start":{"line":51,"column":22},"end":{"line":51,"column":37}},{"start":{"line":51,"column":41},"end":{"line":51,"column":50}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":4},"end":{"line":75,"column":4}},{"start":{"line":75,"column":4},"end":{"line":75,"column":4}}]}},"code":["﻿var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }","  */","var largest = function (dir, options, internal) {","","    // Parse arguments.","    options = options || largest.options;","","    // Get all file stats in parallel.","    return fs.readdirAsync(dir)","    .then (function (files) {","        var paths = _.map(files, function (file) { return path.join(dir, file); });","        return Promise.all(_.map(paths, function (path) { return fs.statAsync(path); }))","        .then(function (stats) { return [paths, stats]; });","    })","","    // Build up a list of possible candidates, recursing into subfolders if requested.","    .spread(function (paths, stats) {","        return Promise.all(","            _.map(stats, function (stat, i) {","                if (stat.isFile()) return Promise.resolve({ path: paths[i], size: stat.size, searched: 1 });","                return options.recurse ? largest(paths[i], options, true) : Promise.resolve(null);","            })","        );","    })","","    // Choose the best candidate.","    .then(function (candidates) {","        return _(candidates)","        .compact()","        .reduce(function (best, cand) {","            if (cand.size > best.size) var temp = cand, cand = best, best = temp;","            best.searched += cand.searched;","            return best;","        });","    })","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    .then(function (result) {","        if (result && options.preview && !internal) {","            var fd_;","            return fs.openAsync(result.path, 'r')","            .then(function (fd) {","                fd_ = fd;","                var buffer = new Buffer(40);","                return fs.readAsync(fd, buffer, 0, 40, 0);","            })","            .spread(function (bytesRead, buffer) {","                result.preview = buffer.toString('utf-8', 0, bytesRead);","                return fs.closeAsync(fd_);","            })","            .then(function () {","                return result;","            });","        } else {","            return result; // Return without adding preview.","        }","    });","};","largest.options = {};","","","function nodeified(dir, options, callback) {","    if (arguments.length == 2) callback = options, options = null;","    largest(dir, options).nodeify(callback);","}","module.exports = nodeified;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"15":1,"18":0,"21":0,"23":0,"24":0,"25":0,"30":0,"32":0,"33":0,"40":0,"43":0,"44":0,"45":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"60":0,"61":0,"64":0,"67":0,"71":1,"74":1,"75":0,"76":0,"78":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-callbacks.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-callbacks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":58}}},"2":{"name":"getAllPathsAndStats","line":22,"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":46}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":37},"end":{"line":25,"column":53}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":30},"end":{"line":35,"column":49}}},"6":{"name":"(anonymous_6)","line":36,"loc":{"start":{"line":36,"column":34},"end":{"line":36,"column":55}}},"7":{"name":"listCandidates","line":53,"loc":{"start":{"line":53,"column":4},"end":{"line":53,"column":52}}},"8":{"name":"(anonymous_8)","line":63,"loc":{"start":{"line":63,"column":49},"end":{"line":63,"column":70}}},"9":{"name":"selectBestCandidate","line":75,"loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":55}}},"10":{"name":"(anonymous_10)","line":77,"loc":{"start":{"line":77,"column":20},"end":{"line":77,"column":42}}},"11":{"name":"addPreviewIfAppropriate","line":86,"loc":{"start":{"line":86,"column":4},"end":{"line":86,"column":55}}},"12":{"name":"(anonymous_12)","line":88,"loc":{"start":{"line":88,"column":38},"end":{"line":88,"column":57}}},"13":{"name":"(anonymous_13)","line":91,"loc":{"start":{"line":91,"column":46},"end":{"line":91,"column":80}}},"14":{"name":"(anonymous_14)","line":94,"loc":{"start":{"line":94,"column":33},"end":{"line":94,"column":48}}},"15":{"name":"(anonymous_15)","line":106,"loc":{"start":{"line":106,"column":24},"end":{"line":106,"column":43}}},"16":{"name":"(anonymous_16)","line":108,"loc":{"start":{"line":108,"column":43},"end":{"line":108,"column":70}}},"17":{"name":"(anonymous_17)","line":110,"loc":{"start":{"line":110,"column":44},"end":{"line":110,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":15,"column":0},"end":{"line":116,"column":2}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":41}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":68}},"9":{"start":{"line":19,"column":31},"end":{"line":19,"column":68}},"10":{"start":{"line":22,"column":4},"end":{"line":50,"column":5}},"11":{"start":{"line":23,"column":8},"end":{"line":49,"column":11}},"12":{"start":{"line":24,"column":12},"end":{"line":24,"column":47}},"13":{"start":{"line":24,"column":23},"end":{"line":24,"column":37}},"14":{"start":{"line":24,"column":38},"end":{"line":24,"column":45}},"15":{"start":{"line":25,"column":12},"end":{"line":25,"column":87}},"16":{"start":{"line":25,"column":55},"end":{"line":25,"column":83}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":27}},"18":{"start":{"line":27,"column":12},"end":{"line":27,"column":41}},"19":{"start":{"line":28,"column":12},"end":{"line":48,"column":13}},"20":{"start":{"line":31,"column":16},"end":{"line":31,"column":63}},"21":{"start":{"line":35,"column":16},"end":{"line":47,"column":19}},"22":{"start":{"line":36,"column":20},"end":{"line":46,"column":23}},"23":{"start":{"line":37,"column":24},"end":{"line":37,"column":52}},"24":{"start":{"line":37,"column":45},"end":{"line":37,"column":52}},"25":{"start":{"line":38,"column":24},"end":{"line":45,"column":25}},"26":{"start":{"line":39,"column":28},"end":{"line":39,"column":42}},"27":{"start":{"line":40,"column":28},"end":{"line":40,"column":42}},"28":{"start":{"line":42,"column":28},"end":{"line":42,"column":44}},"29":{"start":{"line":43,"column":28},"end":{"line":43,"column":40}},"30":{"start":{"line":44,"column":28},"end":{"line":44,"column":96}},"31":{"start":{"line":44,"column":49},"end":{"line":44,"column":96}},"32":{"start":{"line":53,"column":4},"end":{"line":72,"column":5}},"33":{"start":{"line":54,"column":8},"end":{"line":54,"column":28}},"34":{"start":{"line":55,"column":8},"end":{"line":55,"column":37}},"35":{"start":{"line":56,"column":8},"end":{"line":70,"column":9}},"36":{"start":{"line":57,"column":12},"end":{"line":69,"column":13}},"37":{"start":{"line":58,"column":16},"end":{"line":58,"column":86}},"38":{"start":{"line":59,"column":16},"end":{"line":59,"column":28}},"39":{"start":{"line":60,"column":19},"end":{"line":69,"column":13}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":28}},"41":{"start":{"line":63,"column":16},"end":{"line":68,"column":19}},"42":{"start":{"line":64,"column":20},"end":{"line":64,"column":55}},"43":{"start":{"line":64,"column":31},"end":{"line":64,"column":45}},"44":{"start":{"line":64,"column":46},"end":{"line":64,"column":53}},"45":{"start":{"line":65,"column":20},"end":{"line":65,"column":52}},"46":{"start":{"line":65,"column":30},"end":{"line":65,"column":52}},"47":{"start":{"line":66,"column":20},"end":{"line":66,"column":32}},"48":{"start":{"line":67,"column":20},"end":{"line":67,"column":63}},"49":{"start":{"line":67,"column":36},"end":{"line":67,"column":63}},"50":{"start":{"line":71,"column":8},"end":{"line":71,"column":51}},"51":{"start":{"line":71,"column":24},"end":{"line":71,"column":51}},"52":{"start":{"line":75,"column":4},"end":{"line":83,"column":5}},"53":{"start":{"line":76,"column":8},"end":{"line":81,"column":15}},"54":{"start":{"line":78,"column":16},"end":{"line":78,"column":85}},"55":{"start":{"line":78,"column":43},"end":{"line":78,"column":85}},"56":{"start":{"line":79,"column":16},"end":{"line":79,"column":47}},"57":{"start":{"line":80,"column":16},"end":{"line":80,"column":28}},"58":{"start":{"line":82,"column":8},"end":{"line":82,"column":31}},"59":{"start":{"line":86,"column":4},"end":{"line":103,"column":5}},"60":{"start":{"line":87,"column":8},"end":{"line":102,"column":9}},"61":{"start":{"line":88,"column":12},"end":{"line":99,"column":15}},"62":{"start":{"line":89,"column":16},"end":{"line":89,"column":51}},"63":{"start":{"line":89,"column":27},"end":{"line":89,"column":41}},"64":{"start":{"line":89,"column":42},"end":{"line":89,"column":49}},"65":{"start":{"line":90,"column":16},"end":{"line":90,"column":44}},"66":{"start":{"line":91,"column":16},"end":{"line":98,"column":19}},"67":{"start":{"line":92,"column":20},"end":{"line":92,"column":55}},"68":{"start":{"line":92,"column":31},"end":{"line":92,"column":45}},"69":{"start":{"line":92,"column":46},"end":{"line":92,"column":53}},"70":{"start":{"line":93,"column":20},"end":{"line":93,"column":76}},"71":{"start":{"line":94,"column":20},"end":{"line":97,"column":23}},"72":{"start":{"line":95,"column":24},"end":{"line":96,"column":52}},"73":{"start":{"line":95,"column":33},"end":{"line":95,"column":47}},"74":{"start":{"line":96,"column":29},"end":{"line":96,"column":52}},"75":{"start":{"line":101,"column":12},"end":{"line":101,"column":35}},"76":{"start":{"line":106,"column":4},"end":{"line":115,"column":7}},"77":{"start":{"line":107,"column":8},"end":{"line":107,"column":43}},"78":{"start":{"line":107,"column":19},"end":{"line":107,"column":33}},"79":{"start":{"line":107,"column":34},"end":{"line":107,"column":41}},"80":{"start":{"line":108,"column":8},"end":{"line":114,"column":11}},"81":{"start":{"line":109,"column":12},"end":{"line":109,"column":47}},"82":{"start":{"line":109,"column":23},"end":{"line":109,"column":37}},"83":{"start":{"line":109,"column":38},"end":{"line":109,"column":45}},"84":{"start":{"line":110,"column":12},"end":{"line":113,"column":15}},"85":{"start":{"line":111,"column":16},"end":{"line":111,"column":51}},"86":{"start":{"line":111,"column":27},"end":{"line":111,"column":41}},"87":{"start":{"line":111,"column":42},"end":{"line":111,"column":49}},"88":{"start":{"line":112,"column":16},"end":{"line":112,"column":58}},"89":{"start":{"line":119,"column":0},"end":{"line":119,"column":25}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":14},"end":{"line":18,"column":21}},{"start":{"line":18,"column":25},"end":{"line":18,"column":40}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":12}},{"start":{"line":28,"column":12},"end":{"line":28,"column":12}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":24},"end":{"line":37,"column":24}},{"start":{"line":37,"column":24},"end":{"line":37,"column":24}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":24},"end":{"line":38,"column":24}},{"start":{"line":38,"column":24},"end":{"line":38,"column":24}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":28},"end":{"line":44,"column":28}},{"start":{"line":44,"column":28},"end":{"line":44,"column":28}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"9":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":19},"end":{"line":60,"column":19}},{"start":{"line":60,"column":19},"end":{"line":60,"column":19}}]},"10":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":20},"end":{"line":64,"column":20}},{"start":{"line":64,"column":20},"end":{"line":64,"column":20}}]},"11":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":20},"end":{"line":65,"column":20}},{"start":{"line":65,"column":20},"end":{"line":65,"column":20}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":20}},{"start":{"line":67,"column":20},"end":{"line":67,"column":20}}]},"13":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"14":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":16},"end":{"line":78,"column":16}},{"start":{"line":78,"column":16},"end":{"line":78,"column":16}}]},"15":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":8}},{"start":{"line":87,"column":8},"end":{"line":87,"column":8}}]},"16":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":18}},{"start":{"line":87,"column":22},"end":{"line":87,"column":37}},{"start":{"line":87,"column":41},"end":{"line":87,"column":50}}]},"17":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":89,"column":16}},{"start":{"line":89,"column":16},"end":{"line":89,"column":16}}]},"18":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":20},"end":{"line":92,"column":20}},{"start":{"line":92,"column":20},"end":{"line":92,"column":20}}]},"19":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":24},"end":{"line":95,"column":24}},{"start":{"line":95,"column":24},"end":{"line":95,"column":24}}]},"20":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"21":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":12}},{"start":{"line":109,"column":12},"end":{"line":109,"column":12}}]},"22":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":16}},{"start":{"line":111,"column":16},"end":{"line":111,"column":16}}]}},"code":["var Promise = require('bluebird');","var fs = require('fs');","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }","  */","var largest = function (dir, options, internal, callback) {","","    // Parse arguments.","    options = options || largest.options;","    if (arguments.length == 3) callback = internal, internal = null;","","    // Enumerate all files and subfolders in 'dir' to get their stats.","    function getAllPathsAndStats(callback) {","        fs.readdir(dir, function (err, files) {","            if (err) { callback(err); return; }","            var paths = _.map(files, function (file) { return path.join(dir, file); });","            var stats = [];","            var remaining = paths.length;","            if (remaining === 0) {","","                // Directory is empty.","                callback(null, { paths: paths, stats: stats });","            } else {","","                // Get all file stats in parallel.","                paths.forEach(function (path, i) {","                    fs.stat(path, function (err, stat) {","                        if (remaining === 0) return;","                        if (err) {","                            remaining = 0;","                            callback(err);","                        } else {","                            stats[i] = stat;","                            --remaining;","                            if (remaining === 0) callback(null, { paths: paths, stats: stats });","                        }","                    });","                });","            }","        });","    }","","    // Build up a list of possible candidates, recursing into subfolders if requested.","    function listCandidates(paths, stats, callback) {","        var candidates = [];","        var remaining = paths.length;","        for (var i = 0; i < paths.length; ++i) {","            if (stats[i].isFile()) {","                candidates.push({ path: paths[i], size: stats[i].size, searched: 1 });","                --remaining;","            } else if (!options.recurse) {","                --remaining;","            } else {","                largest(paths[i], options, true, function (err, cand) { // recurse","                    if (err) { callback(err); return; }","                    if (cand) candidates.push(cand);","                    --remaining;","                    if (!remaining) callback(null, candidates);","                });","            }","        }","        if (!remaining) callback(null, candidates); // catch fully synchronous cases","    }","","    // Choose the best candidate.","    function selectBestCandidate(candidates, callback) {","        var result = _(candidates)","            .reduce(function (best, cand) {","                if (cand.size > best.size) var temp = cand, cand = best, best = temp;","                best.searched += cand.searched;","                return best;","            });","        callback(null, result);","    }","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    function addPreviewIfAppropriate(result, callback) {","        if (result && options.preview && !internal) {","            fs.open(result.path, 'r', function (err, fd) {","                if (err) { callback(err); return; }","                var buffer = new Buffer(40);","                fs.read(fd, buffer, 0, 40, 0, function (err, bytesRead, buffer) {","                    if (err) { callback(err); return; }","                    result.preview = buffer.toString('utf-8', 0, bytesRead);","                    fs.close(fd, function (err) {","                        if (err) callback(err);","                        else callback(null, result);","                    });","                });","            });","        } else {","            callback(null, result); // Return without adding preview.","        }","    }","","    // Put it all together.","    getAllPathsAndStats(function (err, ps) {","        if (err) { callback(err); return; }","        listCandidates(ps.paths, ps.stats, function (err, candidates) {","            if (err) { callback(err); return; }","            selectBestCandidate(candidates, function (err, result) {","                if (err) { callback(err); return; }","                addPreviewIfAppropriate(result, callback);","            });","        });","    });","};","","","module.exports = largest;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"15":1,"18":0,"19":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"31":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"71":0,"75":1,"76":0,"78":0,"79":0,"80":0,"82":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"101":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"119":1}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-co.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-co.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":52}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":29},"end":{"line":26,"column":45}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":35},"end":{"line":27,"column":51}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":40},"end":{"line":30,"column":59}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":16},"end":{"line":38,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":4,"column":34}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"7":{"start":{"line":19,"column":0},"end":{"line":53,"column":3}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":41}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":43}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":79}},"11":{"start":{"line":26,"column":47},"end":{"line":26,"column":75}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":83}},"13":{"start":{"line":27,"column":53},"end":{"line":27,"column":79}},"14":{"start":{"line":30,"column":4},"end":{"line":33,"column":7}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":83}},"16":{"start":{"line":31,"column":27},"end":{"line":31,"column":83}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":73}},"18":{"start":{"line":36,"column":4},"end":{"line":42,"column":11}},"19":{"start":{"line":39,"column":12},"end":{"line":39,"column":81}},"20":{"start":{"line":39,"column":39},"end":{"line":39,"column":81}},"21":{"start":{"line":40,"column":12},"end":{"line":40,"column":43}},"22":{"start":{"line":41,"column":12},"end":{"line":41,"column":24}},"23":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"24":{"start":{"line":46,"column":8},"end":{"line":46,"column":54}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":36}},"26":{"start":{"line":48,"column":8},"end":{"line":48,"column":70}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":64}},"28":{"start":{"line":50,"column":8},"end":{"line":50,"column":32}},"29":{"start":{"line":52,"column":4},"end":{"line":52,"column":18}},"30":{"start":{"line":54,"column":0},"end":{"line":54,"column":21}},"31":{"start":{"line":57,"column":0},"end":{"line":57,"column":25}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":14},"end":{"line":22,"column":21}},{"start":{"line":22,"column":25},"end":{"line":22,"column":40}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"3":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":33},"end":{"line":32,"column":65}},{"start":{"line":32,"column":68},"end":{"line":32,"column":72}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":14}},{"start":{"line":45,"column":18},"end":{"line":45,"column":33}},{"start":{"line":45,"column":37},"end":{"line":45,"column":46}}]}},"code":["// TODO: BUG: this co implementation does not recurse properly - cause yet to be determined","","","var Promise = require('bluebird');","var fs = Promise.promisifyAll(require('fs'));","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","var co = require('co');","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }","  */","var largest = co(function* (dir, options, internal) {","","    // Parse arguments.","    options = options || largest.options;","","    // Enumerate all files and subfolders in 'dir' to get their stats.","    var files = yield fs.readdirAsync(dir);","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = yield _.map(paths, function (path) { return fs.statAsync(path); });","","    // Build up a list of possible candidates, recursing into subfolders.","    var candidates = yield _.map(stats, function (stat, i) {","        if (stat.isFile()) return { path: paths[i], size: stat.size, searched: 1 };","        return options.recurse ? largest(paths[i], options, true) : null;","    });","","    // Choose the best candidate.","    var result = _(candidates)","        .compact()","        .reduce(function (best, cand) {","            if (cand.size > best.size) var temp = cand, cand = best, best = temp;","            best.searched += cand.searched;","            return best;","        });","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    if (result && options.preview && !internal) {","        var fd = yield fs.openAsync(result.path, 'r');","        var buffer = new Buffer(40);","        var bytesRead = (yield fs.readAsync(fd, buffer, 0, 40, 0))[0];","        result.preview = buffer.toString('utf-8', 0, bytesRead);","        yield fs.closeAsync(fd);","    }","    return result;","});","largest.options = {};","","","module.exports = largest;",""],"l":{"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"19":0,"22":0,"25":0,"26":0,"27":0,"30":0,"31":0,"32":0,"36":0,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-synchronous.js":{"path":"/home/travis/build/npmtest/node-npmtest-asyncawait/node_modules/asyncawait/comparison/largest/largest-synchronous.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":48}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":29},"end":{"line":22,"column":45}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":29},"end":{"line":23,"column":45}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":34},"end":{"line":26,"column":53}}},"5":{"name":"(anonymous_5)","line":34,"loc":{"start":{"line":34,"column":16},"end":{"line":34,"column":38}}},"6":{"name":"nodeified","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":15,"column":0},"end":{"line":49,"column":2}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":41}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":36}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":79}},"10":{"start":{"line":22,"column":47},"end":{"line":22,"column":75}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":76}},"12":{"start":{"line":23,"column":47},"end":{"line":23,"column":72}},"13":{"start":{"line":26,"column":4},"end":{"line":29,"column":7}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":83}},"15":{"start":{"line":27,"column":27},"end":{"line":27,"column":83}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":73}},"17":{"start":{"line":32,"column":4},"end":{"line":38,"column":11}},"18":{"start":{"line":35,"column":12},"end":{"line":35,"column":81}},"19":{"start":{"line":35,"column":39},"end":{"line":35,"column":81}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":43}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":24}},"22":{"start":{"line":41,"column":4},"end":{"line":47,"column":5}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":47}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":36}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":58}},"26":{"start":{"line":45,"column":8},"end":{"line":45,"column":64}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"28":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"29":{"start":{"line":50,"column":0},"end":{"line":50,"column":21}},"30":{"start":{"line":53,"column":0},"end":{"line":61,"column":1}},"31":{"start":{"line":54,"column":4},"end":{"line":54,"column":66}},"32":{"start":{"line":54,"column":31},"end":{"line":54,"column":66}},"33":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"34":{"start":{"line":56,"column":8},"end":{"line":56,"column":46}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":22}},"36":{"start":{"line":62,"column":0},"end":{"line":62,"column":27}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":14},"end":{"line":18,"column":21}},{"start":{"line":18,"column":25},"end":{"line":18,"column":40}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":33},"end":{"line":28,"column":65}},{"start":{"line":28,"column":68},"end":{"line":28,"column":72}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":14}},{"start":{"line":41,"column":18},"end":{"line":41,"column":33}},{"start":{"line":41,"column":37},"end":{"line":41,"column":46}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]}},"code":["var Promise = require('bluebird');","var fs = require('fs');","var path = require('path');","var Buffer = require('buffer').Buffer;","var _ = require('lodash');","","","/**","  * Finds the largest file in the given directory, optionally performing a recursive search.","  * @param {string} dir - the directory to search.","  * @param {object?} options - optional settings: { recurse?: boolean; preview?: boolean }.","  * @returns {object?} null if no files found, otherwise an object of the form","  *                    { path: string; size: number; preview?: string, searched: number; }","  */","var largest = function (dir, options, internal) {","","    // Parse arguments.","    options = options || largest.options;","","    // Enumerate all files and subfolders in 'dir' to get their stats.","    var files = fs.readdirSync(dir);","    var paths = _.map(files, function (file) { return path.join(dir, file); });","    var stats = _.map(paths, function (path) { return fs.statSync(path); });","","    // Build up a list of possible candidates, recursing into subfolders if requested.","    var candidates = _.map(stats, function (stat, i) {","        if (stat.isFile()) return { path: paths[i], size: stat.size, searched: 1 };","        return options.recurse ? largest(paths[i], options, true) : null;","    });","","    // Choose the best candidate.","    var result = _(candidates)","        .compact()","        .reduce(function (best, cand) {","            if (cand.size > best.size) var temp = cand, cand = best, best = temp;","            best.searched += cand.searched;","            return best;","        });","","    // Add a preview if requested (but skip if this is an internal step in a recursive search).","    if (result && options.preview && !internal) {","        var fd = fs.openSync(result.path, 'r');","        var buffer = new Buffer(40);","        var bytesRead = fs.readSync(fd, buffer, 0, 40, 0);","        result.preview = buffer.toString('utf-8', 0, bytesRead);","        fs.closeSync(fd);","    }","    return result;","};","largest.options = {};","","","function nodeified(dir, options, callback) {","    if (arguments.length == 2) callback = options, options = null;","    try {","        callback(null, largest(dir, options));","    }","    catch (err) {","        callback(err);","    }","}","module.exports = nodeified;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"15":1,"18":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"32":0,"35":0,"36":0,"37":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"50":1,"53":1,"54":0,"55":0,"56":0,"59":0,"62":1}}}